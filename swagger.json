{
  "swagger" : "2.0",
  "info" : {
    "description" : "OpenMRS RESTful API documentation generated by Swagger",
    "version" : "2.6.7",
    "title" : "OpenMRS API Docs",
    "contact" : {
      "name" : "OpenMRS",
      "url" : "http://openmrs.org"
    },
    "license" : {
      "name" : "MPL-2.0 w/ HD",
      "url" : "http://openmrs.org/license"
    }
  },
  "host" : "localhost:8080",
  "basePath" : "/openmrs/ws/rest/v1",
  "schemes" : [ "http" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "security" : [ {
    "basic_auth" : [ ]
  }, {
    "basic_auth" : [ ]
  }, {
    "basic_auth" : [ ]
  }, {
    "basic_auth" : [ ]
  } ],
  "paths" : {
    "/metadatamapping/metadataset" : {
      "get" : {
        "tags" : [ "metadatamapping/metadataset" ],
        "summary" : "Fetch all non-retired metadatamapping/metadataset resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllMetadataSets",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "metadatamapping/metadataset response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "metadatamapping/metadataset" ],
        "summary" : "Create with properties in request",
        "operationId" : "createMetadataSet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MetadatamappingMetadatasetCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "metadatamapping/metadataset response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/metadatamapping/metadataset/{uuid}" : {
      "get" : {
        "tags" : [ "metadatamapping/metadataset" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getMetadataSet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "metadatamapping/metadataset response",
            "schema" : {
              "$ref" : "#/definitions/MetadatamappingMetadatasetGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "metadatamapping/metadataset" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateMetadataSet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MetadatamappingMetadatasetUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "metadatamapping/metadataset response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "metadatamapping/metadataset" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteMetadataSet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/reportingrest/dataSetDefinition" : {
      "get" : {
        "tags" : [ "reportingrest/dataSetDefinition" ],
        "summary" : "Fetch all non-retired reportingrest/dataSetDefinition resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllDataSetDefinitions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "reportingrest/dataSetDefinition response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "reportingrest/dataSetDefinition" ],
        "summary" : "Create with properties in request",
        "operationId" : "createDataSetDefinition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReportingrestDataSetDefinitionCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "reportingrest/dataSetDefinition response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/reportingrest/dataSetDefinition/{uuid}" : {
      "get" : {
        "tags" : [ "reportingrest/dataSetDefinition" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getDataSetDefinition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "reportingrest/dataSetDefinition response",
            "schema" : {
              "$ref" : "#/definitions/ReportingrestDataSetDefinitionGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "reportingrest/dataSetDefinition" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateDataSetDefinition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReportingrestDataSetDefinitionUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "reportingrest/dataSetDefinition response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "reportingrest/dataSetDefinition" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteDataSetDefinition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/drug" : {
      "get" : {
        "tags" : [ "drug" ],
        "summary" : "Fetch all non-retired drug resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllDrugs",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "query",
          "description" : "Must be used with source",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "preferredMapTypes",
          "in" : "query",
          "description" : "Must be used with source",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "source",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Must be used with q",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "exactLocale",
          "in" : "query",
          "description" : "Must be used with q",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "drug response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "drug" ],
        "summary" : "Create with properties in request",
        "operationId" : "createDrug",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DrugCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "drug response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/drug/{uuid}" : {
      "get" : {
        "tags" : [ "drug" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getDrug",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "drug response",
            "schema" : {
              "$ref" : "#/definitions/DrugGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "drug" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateDrug",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DrugUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "drug response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "drug" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteDrug",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/orderfrequency" : {
      "get" : {
        "tags" : [ "orderfrequency" ],
        "summary" : "Fetch all non-retired orderfrequency resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllOrderFrequencies",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "orderfrequency response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "orderfrequency" ],
        "summary" : "Create with properties in request",
        "operationId" : "createOrderFrequency",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OrderfrequencyCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "orderfrequency response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/orderfrequency/{uuid}" : {
      "get" : {
        "tags" : [ "orderfrequency" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getOrderFrequency",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "orderfrequency response",
            "schema" : {
              "$ref" : "#/definitions/OrderfrequencyGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "orderfrequency" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateOrderFrequency",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OrderfrequencyUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "orderfrequency response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "orderfrequency" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteOrderFrequency",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/conceptreferenceterm" : {
      "get" : {
        "tags" : [ "conceptreferenceterm" ],
        "summary" : "Fetch all non-retired conceptreferenceterm resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllConceptReferenceTerms",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "codeOrName",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "searchType",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "source",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptreferenceterm response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "conceptreferenceterm" ],
        "summary" : "Create with properties in request",
        "operationId" : "createConceptReferenceTerm",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptreferencetermCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptreferenceterm response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/conceptreferenceterm/{uuid}" : {
      "get" : {
        "tags" : [ "conceptreferenceterm" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getConceptReferenceTerm",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptreferenceterm response",
            "schema" : {
              "$ref" : "#/definitions/ConceptreferencetermGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "conceptreferenceterm" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateConceptReferenceTerm",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptreferencetermUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptreferenceterm response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "conceptreferenceterm" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteConceptReferenceTerm",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/metadatamapping/termmapping" : {
      "get" : {
        "tags" : [ "metadatamapping/termmapping" ],
        "summary" : "Fetch all non-retired metadatamapping/termmapping resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllMetadataTermMappings",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "metadatamapping/termmapping response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "metadatamapping/termmapping" ],
        "summary" : "Create with properties in request",
        "operationId" : "createMetadataTermMapping",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MetadatamappingTermmappingCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "metadatamapping/termmapping response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/metadatamapping/termmapping/{uuid}" : {
      "get" : {
        "tags" : [ "metadatamapping/termmapping" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getMetadataTermMapping",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "metadatamapping/termmapping response",
            "schema" : {
              "$ref" : "#/definitions/MetadatamappingTermmappingGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "metadatamapping/termmapping" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateMetadataTermMapping",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MetadatamappingTermmappingUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "metadatamapping/termmapping response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "metadatamapping/termmapping" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteMetadataTermMapping",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/ordergroup" : {
      "get" : {
        "tags" : [ "ordergroup" ],
        "summary" : "Search for ordergroup",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllOrderGroups",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ordergroup response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "ordergroup" ],
        "summary" : "Create with properties in request",
        "operationId" : "createOrderGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OrdergroupCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "ordergroup response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/ordergroup/{uuid}" : {
      "get" : {
        "tags" : [ "ordergroup" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getOrderGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ordergroup response",
            "schema" : {
              "$ref" : "#/definitions/OrdergroupGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "ordergroup" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateOrderGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OrdergroupUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "ordergroup response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "ordergroup" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteOrderGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/programattributetype" : {
      "get" : {
        "tags" : [ "programattributetype" ],
        "summary" : "Fetch all non-retired programattributetype resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllProgramAttributeTypes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "programattributetype response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "programattributetype" ],
        "summary" : "Create with properties in request",
        "operationId" : "createProgramAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProgramattributetypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "programattributetype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/programattributetype/{uuid}" : {
      "get" : {
        "tags" : [ "programattributetype" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getProgramAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "programattributetype response",
            "schema" : {
              "$ref" : "#/definitions/ProgramattributetypeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "programattributetype" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateProgramAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProgramattributetypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "programattributetype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "programattributetype" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteProgramAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/alert" : {
      "get" : {
        "tags" : [ "alert" ],
        "summary" : "Fetch all non-retired alert resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllAlerts",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "alert response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "alert" ],
        "summary" : "Create with properties in request",
        "operationId" : "createAlert",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AlertCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "alert response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/alert/{uuid}" : {
      "get" : {
        "tags" : [ "alert" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getAlert",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "alert response",
            "schema" : {
              "$ref" : "#/definitions/AlertGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "alert" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateAlert",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AlertUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "alert response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "alert" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteAlert",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/fieldtype" : {
      "get" : {
        "tags" : [ "fieldtype" ],
        "summary" : "Fetch all non-retired fieldtype resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllFieldTypes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "fieldtype response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "fieldtype" ],
        "summary" : "Create with properties in request",
        "operationId" : "createFieldType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FieldtypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "fieldtype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/fieldtype/{uuid}" : {
      "get" : {
        "tags" : [ "fieldtype" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getFieldType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "fieldtype response",
            "schema" : {
              "$ref" : "#/definitions/FieldtypeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "fieldtype" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateFieldType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FieldtypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "fieldtype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "fieldtype" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteFieldType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/cohortm/cohortmember" : {
      "get" : {
        "tags" : [ "cohortm/cohortmember" ],
        "summary" : "Search for cohortm/cohortmember",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllCohortMembers",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "cohortm/cohortmember response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "cohortm/cohortmember" ],
        "summary" : "Create with properties in request",
        "operationId" : "createCohortMember",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CohortmCohortmemberCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "cohortm/cohortmember response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/cohortm/cohortmember/{uuid}" : {
      "get" : {
        "tags" : [ "cohortm/cohortmember" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getCohortMember",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "cohortm/cohortmember response",
            "schema" : {
              "$ref" : "#/definitions/CohortmCohortmemberGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "cohortm/cohortmember" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateCohortMember",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CohortmCohortmemberUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "cohortm/cohortmember response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "cohortm/cohortmember" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteCohortMember",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/conceptsource" : {
      "get" : {
        "tags" : [ "conceptsource" ],
        "summary" : "Fetch all non-retired conceptsource resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllConceptSources",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptsource response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "conceptsource" ],
        "summary" : "Create with properties in request",
        "operationId" : "createConceptSource",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptsourceCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptsource response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/conceptsource/{uuid}" : {
      "get" : {
        "tags" : [ "conceptsource" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getConceptSource",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptsource response",
            "schema" : {
              "$ref" : "#/definitions/ConceptsourceGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "conceptsource" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateConceptSource",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptsourceUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptsource response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "conceptsource" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteConceptSource",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/providerattributetype" : {
      "get" : {
        "tags" : [ "providerattributetype" ],
        "summary" : "Fetch all non-retired providerattributetype resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllProviderAttributeTypes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "providerattributetype response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "providerattributetype" ],
        "summary" : "Create with properties in request",
        "operationId" : "createProviderAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProviderattributetypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "providerattributetype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/providerattributetype/{uuid}" : {
      "get" : {
        "tags" : [ "providerattributetype" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getProviderAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "providerattributetype response",
            "schema" : {
              "$ref" : "#/definitions/ProviderattributetypeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "providerattributetype" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateProviderAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProviderattributetypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "providerattributetype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "providerattributetype" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteProviderAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/taskdefinition" : {
      "get" : {
        "tags" : [ "taskdefinition" ],
        "summary" : "Fetch all non-retired taskdefinition resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllTaskDefinitions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "taskdefinition response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "taskdefinition" ],
        "summary" : "Create with properties in request",
        "operationId" : "createTaskDefinition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TaskdefinitionCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "taskdefinition response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/taskdefinition/{uuid}" : {
      "get" : {
        "tags" : [ "taskdefinition" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getTaskDefinition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "taskdefinition response",
            "schema" : {
              "$ref" : "#/definitions/TaskdefinitionGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "taskdefinition" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateTaskDefinition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TaskdefinitionUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "taskdefinition response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "taskdefinition" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteTaskDefinition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/serverlog" : {
      "get" : {
        "tags" : [ "serverlog" ],
        "summary" : "Fetch all non-retired",
        "operationId" : "getAllServerLogs",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "serverlog response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/serverlog/{uuid}" : {
      "get" : {
        "tags" : [ "serverlog" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getServerLog",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "serverlog response",
            "schema" : {
              "$ref" : "#/definitions/ServerlogGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/systemsetting" : {
      "get" : {
        "tags" : [ "systemsetting" ],
        "summary" : "Fetch all non-retired systemsetting resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllSystemSettings",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "systemsetting response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "systemsetting" ],
        "summary" : "Create with properties in request",
        "operationId" : "createSystemSetting",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SystemsettingCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "systemsetting response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/systemsetting/{uuid}" : {
      "get" : {
        "tags" : [ "systemsetting" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getSystemSetting",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "systemsetting response",
            "schema" : {
              "$ref" : "#/definitions/SystemsettingGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "systemsetting" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateSystemSetting",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SystemsettingUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "systemsetting response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "systemsetting" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteSystemSetting",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/module" : {
      "get" : {
        "tags" : [ "module" ],
        "summary" : "Fetch all non-retired",
        "operationId" : "getAllModules",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "module response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/module/{uuid}" : {
      "get" : {
        "tags" : [ "module" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getModule",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "module response",
            "schema" : {
              "$ref" : "#/definitions/ModuleGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/person" : {
      "get" : {
        "tags" : [ "person" ],
        "summary" : "Search for person",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllPersons",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "person response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "person" ],
        "summary" : "Create with properties in request",
        "operationId" : "createPerson",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PersonCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "person response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/person/{uuid}" : {
      "get" : {
        "tags" : [ "person" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getPerson",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "person response",
            "schema" : {
              "$ref" : "#/definitions/PersonGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "person" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updatePerson",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PersonUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "person response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "person" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deletePerson",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/customdatatype" : {
      "get" : {
        "tags" : [ "customdatatype" ],
        "summary" : "Fetch all non-retired customdatatype resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllCustomDatatypes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "customdatatype response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/customdatatype/{uuid}" : {
      "get" : {
        "tags" : [ "customdatatype" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getCustomDatatype",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "customdatatype response",
            "schema" : {
              "$ref" : "#/definitions/CustomdatatypeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "customdatatype" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteCustomDatatype",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/patientflags/priority" : {
      "get" : {
        "tags" : [ "patientflags/priority" ],
        "summary" : "Fetch all non-retired patientflags/priority resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllPatientFlagPriorities",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "patientflags/priority response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "patientflags/priority" ],
        "summary" : "Create with properties in request",
        "operationId" : "createPatientFlagPriority",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatientflagsPriorityCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "patientflags/priority response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/patientflags/priority/{uuid}" : {
      "get" : {
        "tags" : [ "patientflags/priority" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getPatientFlagPriority",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "patientflags/priority response",
            "schema" : {
              "$ref" : "#/definitions/PatientflagsPriorityGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "patientflags/priority" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updatePatientFlagPriority",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatientflagsPriorityUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "patientflags/priority response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "patientflags/priority" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deletePatientFlagPriority",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/orderable" : {
      "get" : {
        "tags" : [ "orderable" ],
        "summary" : "Search for orderable",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllOrderables",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "orderable response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      }
    },
    "/conceptdatatype" : {
      "get" : {
        "tags" : [ "conceptdatatype" ],
        "summary" : "Fetch all non-retired conceptdatatype resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllConceptDatatypes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptdatatype response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/conceptdatatype/{uuid}" : {
      "get" : {
        "tags" : [ "conceptdatatype" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getConceptDatatype",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptdatatype response",
            "schema" : {
              "$ref" : "#/definitions/ConceptdatatypeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "conceptdatatype" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteConceptDatatype",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/condition" : {
      "get" : {
        "tags" : [ "condition" ],
        "summary" : "Search for condition",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllConditions",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "condition response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "condition" ],
        "summary" : "Create with properties in request",
        "operationId" : "createCondition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConditionCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "condition response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/condition/{uuid}" : {
      "get" : {
        "tags" : [ "condition" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getCondition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "condition response",
            "schema" : {
              "$ref" : "#/definitions/ConditionGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "condition" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateCondition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConditionUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "condition response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "condition" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteCondition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/drugreferencemap" : {
      "get" : {
        "tags" : [ "drugreferencemap" ],
        "summary" : "Search for drugreferencemap",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllDrugReferenceMaps",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "drugreferencemap response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "drugreferencemap" ],
        "summary" : "Create with properties in request",
        "operationId" : "createDrugReferenceMap",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DrugreferencemapCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "drugreferencemap response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/drugreferencemap/{uuid}" : {
      "get" : {
        "tags" : [ "drugreferencemap" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getDrugReferenceMap",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "drugreferencemap response",
            "schema" : {
              "$ref" : "#/definitions/DrugreferencemapGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "drugreferencemap" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateDrugReferenceMap",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DrugreferencemapUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "drugreferencemap response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "drugreferencemap" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteDrugReferenceMap",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/location" : {
      "get" : {
        "tags" : [ "location" ],
        "summary" : "Fetch all non-retired location resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllLocations",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tag",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "location response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "location" ],
        "summary" : "Create with properties in request",
        "operationId" : "createLocation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LocationCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "location response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/location/{uuid}" : {
      "get" : {
        "tags" : [ "location" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getLocation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "location response",
            "schema" : {
              "$ref" : "#/definitions/LocationGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "location" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateLocation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LocationUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "location response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "location" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteLocation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/privilege" : {
      "get" : {
        "tags" : [ "privilege" ],
        "summary" : "Fetch all non-retired privilege resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllPrivileges",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "privilege response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "privilege" ],
        "summary" : "Create with properties in request",
        "operationId" : "createPrivilege",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PrivilegeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "privilege response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/privilege/{uuid}" : {
      "get" : {
        "tags" : [ "privilege" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getPrivilege",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "privilege response",
            "schema" : {
              "$ref" : "#/definitions/PrivilegeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "privilege" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updatePrivilege",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PrivilegeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "privilege response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "privilege" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deletePrivilege",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/databasechange" : {
      "get" : {
        "tags" : [ "databasechange" ],
        "summary" : "Fetch all non-retired",
        "operationId" : "getAllDatabaseChanges",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "databasechange response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/databasechange/{uuid}" : {
      "get" : {
        "tags" : [ "databasechange" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getDatabaseChange",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "databasechange response",
            "schema" : {
              "$ref" : "#/definitions/DatabasechangeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/personattributetype" : {
      "get" : {
        "tags" : [ "personattributetype" ],
        "summary" : "Fetch all non-retired personattributetype resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllPersonAttributeTypes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "personattributetype response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "personattributetype" ],
        "summary" : "Create with properties in request",
        "operationId" : "createPersonAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PersonattributetypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "personattributetype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/personattributetype/{uuid}" : {
      "get" : {
        "tags" : [ "personattributetype" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getPersonAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "personattributetype response",
            "schema" : {
              "$ref" : "#/definitions/PersonattributetypeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "personattributetype" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updatePersonAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PersonattributetypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "personattributetype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "personattributetype" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deletePersonAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/ordertype" : {
      "get" : {
        "tags" : [ "ordertype" ],
        "summary" : "Fetch all non-retired ordertype resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllOrderTypes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ordertype response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "ordertype" ],
        "summary" : "Create with properties in request",
        "operationId" : "createOrderType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OrdertypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "ordertype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/ordertype/{uuid}" : {
      "get" : {
        "tags" : [ "ordertype" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getOrderType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ordertype response",
            "schema" : {
              "$ref" : "#/definitions/OrdertypeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "ordertype" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateOrderType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OrdertypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "ordertype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "ordertype" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteOrderType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/field" : {
      "get" : {
        "tags" : [ "field" ],
        "summary" : "Fetch all non-retired field resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllFields",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "field response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "field" ],
        "summary" : "Create with properties in request",
        "operationId" : "createField",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FieldCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "field response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/field/{uuid}" : {
      "get" : {
        "tags" : [ "field" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getField",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "field response",
            "schema" : {
              "$ref" : "#/definitions/FieldGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "field" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateField",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FieldUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "field response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "field" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteField",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/conceptproposal" : {
      "get" : {
        "tags" : [ "conceptproposal" ],
        "summary" : "Fetch all non-retired conceptproposal resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllConceptProposals",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptproposal response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "conceptproposal" ],
        "summary" : "Create with properties in request",
        "operationId" : "createConceptProposal",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptproposalCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptproposal response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/conceptproposal/{uuid}" : {
      "get" : {
        "tags" : [ "conceptproposal" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getConceptProposal",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptproposal response",
            "schema" : {
              "$ref" : "#/definitions/ConceptproposalGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "conceptproposal" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateConceptProposal",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptproposalUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptproposal response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "conceptproposal" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteConceptProposal",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/cohortm/cohort" : {
      "get" : {
        "tags" : [ "cohortm/cohort" ],
        "summary" : "Fetch all non-retired cohortm/cohort resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllCohorts",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "cohortm/cohort response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "cohortm/cohort" ],
        "summary" : "Create with properties in request",
        "operationId" : "createCohort",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CohortmCohortCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "cohortm/cohort response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/cohortm/cohort/{uuid}" : {
      "get" : {
        "tags" : [ "cohortm/cohort" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getCohort",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "cohortm/cohort response",
            "schema" : {
              "$ref" : "#/definitions/CohortmCohortGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "cohortm/cohort" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateCohort",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CohortmCohortUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "cohortm/cohort response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "cohortm/cohort" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteCohort",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/orderset" : {
      "get" : {
        "tags" : [ "orderset" ],
        "summary" : "Fetch all non-retired orderset resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllOrderSets",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "orderset response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "orderset" ],
        "summary" : "Create with properties in request",
        "operationId" : "createOrderSet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OrdersetCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "orderset response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/orderset/{uuid}" : {
      "get" : {
        "tags" : [ "orderset" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getOrderSet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "orderset response",
            "schema" : {
              "$ref" : "#/definitions/OrdersetGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "orderset" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateOrderSet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OrdersetUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "orderset response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "orderset" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteOrderSet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/order" : {
      "get" : {
        "tags" : [ "order" ],
        "summary" : "Search for order",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllOrders",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "t",
          "in" : "query",
          "description" : "The type of Subclass Resource to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderNumber",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "isStopped",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "includeVoided",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "excludeDiscontinueOrders",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "accessionNumber",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fulfillerStatus",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "excludeCanceledAndExpired",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "careSetting",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "concepts",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "autoExpireOnOrBeforeDate",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "patient",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderTypes",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "activatedOnOrBeforeDate",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "action",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "canceledOrExpiredOnOrBeforeDate",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "includeNullFulfillerStatus",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "activatedOnOrAfterDate",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "order response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "order" ],
        "summary" : "Create with properties in request",
        "operationId" : "createOrder",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OrderCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "order response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/order/{uuid}" : {
      "get" : {
        "tags" : [ "order" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getOrder",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "order response",
            "schema" : {
              "$ref" : "#/definitions/OrderGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "order" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteOrder",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/obstree" : {
      "get" : {
        "tags" : [ "obstree" ],
        "summary" : "Search for obstree",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllObsTrees",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "obstree response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      }
    },
    "/administrationlinks" : {
      "get" : {
        "tags" : [ "administrationlinks" ],
        "summary" : "Fetch all non-retired",
        "operationId" : "getAllAdministrationLinkses",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "administrationlinks response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/administrationlinks/{uuid}" : {
      "get" : {
        "tags" : [ "administrationlinks" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getAdministrationLinks",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "administrationlinks response",
            "schema" : {
              "$ref" : "#/definitions/AdministrationlinksGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/conceptattributetype" : {
      "get" : {
        "tags" : [ "conceptattributetype" ],
        "summary" : "Fetch all non-retired conceptattributetype resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllConceptAttributeTypes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptattributetype response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "conceptattributetype" ],
        "summary" : "Create with properties in request",
        "operationId" : "createConceptAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptattributetypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptattributetype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/conceptattributetype/{uuid}" : {
      "get" : {
        "tags" : [ "conceptattributetype" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getConceptAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptattributetype response",
            "schema" : {
              "$ref" : "#/definitions/ConceptattributetypeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "conceptattributetype" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateConceptAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptattributetypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptattributetype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "conceptattributetype" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteConceptAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/form" : {
      "get" : {
        "tags" : [ "form" ],
        "summary" : "Fetch all non-retired form resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllForms",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "published",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "form response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "form" ],
        "summary" : "Create with properties in request",
        "operationId" : "createForm",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FormCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "form response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/form/{uuid}" : {
      "get" : {
        "tags" : [ "form" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getForm",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "form response",
            "schema" : {
              "$ref" : "#/definitions/FormGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "form" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateForm",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FormUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "form response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "form" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteForm",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/caresetting" : {
      "get" : {
        "tags" : [ "caresetting" ],
        "summary" : "Fetch all non-retired caresetting resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllCareSettings",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "caresetting response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/caresetting/{uuid}" : {
      "get" : {
        "tags" : [ "caresetting" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getCareSetting",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "caresetting response",
            "schema" : {
              "$ref" : "#/definitions/CaresettingGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "caresetting" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteCareSetting",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/patientidentifiertype" : {
      "get" : {
        "tags" : [ "patientidentifiertype" ],
        "summary" : "Fetch all non-retired patientidentifiertype resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllPatientIdentifierTypes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "patientidentifiertype response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "patientidentifiertype" ],
        "summary" : "Create with properties in request",
        "operationId" : "createPatientIdentifierType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatientidentifiertypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "patientidentifiertype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/patientidentifiertype/{uuid}" : {
      "get" : {
        "tags" : [ "patientidentifiertype" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getPatientIdentifierType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "patientidentifiertype response",
            "schema" : {
              "$ref" : "#/definitions/PatientidentifiertypeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "patientidentifiertype" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updatePatientIdentifierType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatientidentifiertypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "patientidentifiertype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "patientidentifiertype" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deletePatientIdentifierType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/visittype" : {
      "get" : {
        "tags" : [ "visittype" ],
        "summary" : "Fetch all non-retired visittype resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllVisitTypes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "visittype response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "visittype" ],
        "summary" : "Create with properties in request",
        "operationId" : "createVisitType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VisittypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "visittype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/visittype/{uuid}" : {
      "get" : {
        "tags" : [ "visittype" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getVisitType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "visittype response",
            "schema" : {
              "$ref" : "#/definitions/VisittypeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "visittype" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateVisitType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VisittypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "visittype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "visittype" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteVisitType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/patientflags/flag" : {
      "get" : {
        "tags" : [ "patientflags/flag" ],
        "summary" : "Fetch all non-retired patientflags/flag resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllPatientFlagFlags",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "patientflags/flag response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "patientflags/flag" ],
        "summary" : "Create with properties in request",
        "operationId" : "createPatientFlagFlag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatientflagsFlagCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "patientflags/flag response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/patientflags/flag/{uuid}" : {
      "get" : {
        "tags" : [ "patientflags/flag" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getPatientFlagFlag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "patientflags/flag response",
            "schema" : {
              "$ref" : "#/definitions/PatientflagsFlagGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "patientflags/flag" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updatePatientFlagFlag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatientflagsFlagUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "patientflags/flag response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "patientflags/flag" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deletePatientFlagFlag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/locationtag" : {
      "get" : {
        "tags" : [ "locationtag" ],
        "summary" : "Fetch all non-retired locationtag resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllLocationTags",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "locationtag response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "locationtag" ],
        "summary" : "Create with properties in request",
        "operationId" : "createLocationTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LocationtagCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "locationtag response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/locationtag/{uuid}" : {
      "get" : {
        "tags" : [ "locationtag" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getLocationTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "locationtag response",
            "schema" : {
              "$ref" : "#/definitions/LocationtagGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "locationtag" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateLocationTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LocationtagUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "locationtag response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "locationtag" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteLocationTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/reportingrest/dataSet" : {
      "get" : {
        "tags" : [ "reportingrest/dataSet" ],
        "summary" : "Search for reportingrest/dataSet",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllEvaluatedDataSets",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "reportingrest/dataSet response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "reportingrest/dataSet" ],
        "summary" : "Create with properties in request",
        "operationId" : "createEvaluatedDataSet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReportingrestDataSetCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "reportingrest/dataSet response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/reportingrest/dataSet/{uuid}" : {
      "get" : {
        "tags" : [ "reportingrest/dataSet" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getEvaluatedDataSet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "reportingrest/dataSet response",
            "schema" : {
              "$ref" : "#/definitions/ReportingrestDataSetGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "reportingrest/dataSet" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateEvaluatedDataSet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReportingrestDataSetUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "reportingrest/dataSet response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "reportingrest/dataSet" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteEvaluatedDataSet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/relationshiptype" : {
      "get" : {
        "tags" : [ "relationshiptype" ],
        "summary" : "Fetch all non-retired relationshiptype resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllRelationShipTypes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "relationshiptype response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "relationshiptype" ],
        "summary" : "Create with properties in request",
        "operationId" : "createRelationShipType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RelationshiptypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "relationshiptype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/relationshiptype/{uuid}" : {
      "get" : {
        "tags" : [ "relationshiptype" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getRelationShipType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "relationshiptype response",
            "schema" : {
              "$ref" : "#/definitions/RelationshiptypeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "relationshiptype" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateRelationShipType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RelationshiptypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "relationshiptype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "relationshiptype" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteRelationShipType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/openconceptlab/subscription" : {
      "get" : {
        "tags" : [ "openconceptlab/subscription" ],
        "summary" : "Fetch all non-retired openconceptlab/subscription resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllSubscriptions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "openconceptlab/subscription response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "openconceptlab/subscription" ],
        "summary" : "Create with properties in request",
        "operationId" : "createSubscription",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OpenconceptlabSubscriptionCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "openconceptlab/subscription response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/openconceptlab/subscription/{uuid}" : {
      "get" : {
        "tags" : [ "openconceptlab/subscription" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getSubscription",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "openconceptlab/subscription response",
            "schema" : {
              "$ref" : "#/definitions/OpenconceptlabSubscriptionGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "openconceptlab/subscription" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateSubscription",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OpenconceptlabSubscriptionUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "openconceptlab/subscription response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "openconceptlab/subscription" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteSubscription",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/program" : {
      "get" : {
        "tags" : [ "program" ],
        "summary" : "Fetch all non-retired program resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllPrograms",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "program response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "program" ],
        "summary" : "Create with properties in request",
        "operationId" : "createProgram",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProgramCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "program response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/program/{uuid}" : {
      "get" : {
        "tags" : [ "program" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getProgram",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "program response",
            "schema" : {
              "$ref" : "#/definitions/ProgramGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "program" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateProgram",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProgramUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "program response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "program" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteProgram",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/reportingrest/cohortDefinition" : {
      "get" : {
        "tags" : [ "reportingrest/cohortDefinition" ],
        "summary" : "Fetch all non-retired reportingrest/cohortDefinition resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllCohortDefinitions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "reportingrest/cohortDefinition response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "reportingrest/cohortDefinition" ],
        "summary" : "Create with properties in request",
        "operationId" : "createCohortDefinition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReportingrestCohortDefinitionCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "reportingrest/cohortDefinition response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/reportingrest/cohortDefinition/{uuid}" : {
      "get" : {
        "tags" : [ "reportingrest/cohortDefinition" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getCohortDefinition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "reportingrest/cohortDefinition response",
            "schema" : {
              "$ref" : "#/definitions/ReportingrestCohortDefinitionGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "reportingrest/cohortDefinition" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateCohortDefinition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReportingrestCohortDefinitionUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "reportingrest/cohortDefinition response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "reportingrest/cohortDefinition" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteCohortDefinition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/conceptstopword" : {
      "get" : {
        "tags" : [ "conceptstopword" ],
        "summary" : "Fetch all non-retired conceptstopword resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllConceptStopwords",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptstopword response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "conceptstopword" ],
        "summary" : "Create with properties in request",
        "operationId" : "createConceptStopword",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptstopwordCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptstopword response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/conceptstopword/{uuid}" : {
      "get" : {
        "tags" : [ "conceptstopword" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getConceptStopword",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptstopword response",
            "schema" : {
              "$ref" : "#/definitions/ConceptstopwordGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "conceptstopword" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateConceptStopword",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptstopwordUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptstopword response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "conceptstopword" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteConceptStopword",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/reportingrest/reportRequest" : {
      "get" : {
        "tags" : [ "reportingrest/reportRequest" ],
        "summary" : "Search for reportingrest/reportRequest",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllReportRequests",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "reportingrest/reportRequest response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "reportingrest/reportRequest" ],
        "summary" : "Create with properties in request",
        "operationId" : "createReportRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReportingrestReportRequestCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "reportingrest/reportRequest response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/reportingrest/reportRequest/{uuid}" : {
      "get" : {
        "tags" : [ "reportingrest/reportRequest" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getReportRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "reportingrest/reportRequest response",
            "schema" : {
              "$ref" : "#/definitions/ReportingrestReportRequestGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "reportingrest/reportRequest" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateReportRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReportingrestReportRequestUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "reportingrest/reportRequest response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "reportingrest/reportRequest" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteReportRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/queue-room-provider" : {
      "get" : {
        "tags" : [ "queue-room-provider" ],
        "summary" : "Fetch all non-retired queue-room-provider resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllRoomProviderMaps",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "queue-room-provider response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "queue-room-provider" ],
        "summary" : "Create with properties in request",
        "operationId" : "createRoomProviderMap",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Queue-room-providerCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "queue-room-provider response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/queue-room-provider/{uuid}" : {
      "get" : {
        "tags" : [ "queue-room-provider" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getRoomProviderMap",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "queue-room-provider response",
            "schema" : {
              "$ref" : "#/definitions/Queue-room-providerGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "queue-room-provider" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateRoomProviderMap",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Queue-room-providerUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "queue-room-provider response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "queue-room-provider" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteRoomProviderMap",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/patientdiagnoses" : {
      "get" : {
        "tags" : [ "patientdiagnoses" ],
        "summary" : "Search for patientdiagnoses",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllDiagnoses",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "patientdiagnoses response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "patientdiagnoses" ],
        "summary" : "Create with properties in request",
        "operationId" : "createDiagnosis",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatientdiagnosesCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "patientdiagnoses response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/patientdiagnoses/{uuid}" : {
      "get" : {
        "tags" : [ "patientdiagnoses" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getDiagnosis",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "patientdiagnoses response",
            "schema" : {
              "$ref" : "#/definitions/PatientdiagnosesGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "patientdiagnoses" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateDiagnosis",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatientdiagnosesUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "patientdiagnoses response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "patientdiagnoses" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteDiagnosis",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/patientflags/tag" : {
      "get" : {
        "tags" : [ "patientflags/tag" ],
        "summary" : "Fetch all non-retired patientflags/tag resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllPatientFlagTags",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "patientflags/tag response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "patientflags/tag" ],
        "summary" : "Create with properties in request",
        "operationId" : "createPatientFlagTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatientflagsTagCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "patientflags/tag response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/patientflags/tag/{uuid}" : {
      "get" : {
        "tags" : [ "patientflags/tag" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getPatientFlagTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "patientflags/tag response",
            "schema" : {
              "$ref" : "#/definitions/PatientflagsTagGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "patientflags/tag" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updatePatientFlagTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatientflagsTagUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "patientflags/tag response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "patientflags/tag" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deletePatientFlagTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/encounter" : {
      "get" : {
        "tags" : [ "encounter" ],
        "summary" : "Search for encounter",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllEncounters",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "obsConcept",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "obsValues",
          "in" : "query",
          "description" : "Must be used with patient and obsConcept",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "todate",
          "in" : "query",
          "description" : "Must be used with patient",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "patient",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "encounterType",
          "in" : "query",
          "description" : "Must be used with patient",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fromdate",
          "in" : "query",
          "description" : "Must be used with patient",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "Must be used with patient",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "encounter response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "encounter" ],
        "summary" : "Create with properties in request",
        "operationId" : "createEncounter",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EncounterCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "encounter response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/encounter/{uuid}" : {
      "get" : {
        "tags" : [ "encounter" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getEncounter",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "encounter response",
            "schema" : {
              "$ref" : "#/definitions/EncounterGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "encounter" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateEncounter",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EncounterUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "encounter response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "encounter" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteEncounter",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/visit" : {
      "get" : {
        "tags" : [ "visit" ],
        "summary" : "Fetch all non-retired visit resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllVisits",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "visit response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "visit" ],
        "summary" : "Create with properties in request",
        "operationId" : "createVisit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VisitCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "visit response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/visit/{uuid}" : {
      "get" : {
        "tags" : [ "visit" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getVisit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "visit response",
            "schema" : {
              "$ref" : "#/definitions/VisitGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "visit" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateVisit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VisitUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "visit response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "visit" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteVisit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/idgen/autogenerationoption" : {
      "get" : {
        "tags" : [ "idgen/autogenerationoption" ],
        "summary" : "Fetch all non-retired idgen/autogenerationoption resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllAutoGenerationOptions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "idgen/autogenerationoption response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "idgen/autogenerationoption" ],
        "summary" : "Create with properties in request",
        "operationId" : "createAutoGenerationOption",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IdgenAutogenerationoptionCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "idgen/autogenerationoption response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/idgen/autogenerationoption/{uuid}" : {
      "get" : {
        "tags" : [ "idgen/autogenerationoption" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getAutoGenerationOption",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "idgen/autogenerationoption response",
            "schema" : {
              "$ref" : "#/definitions/IdgenAutogenerationoptionGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "idgen/autogenerationoption" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateAutoGenerationOption",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IdgenAutogenerationoptionUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "idgen/autogenerationoption response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "idgen/autogenerationoption" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteAutoGenerationOption",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/metadatamapping/source" : {
      "get" : {
        "tags" : [ "metadatamapping/source" ],
        "summary" : "Fetch all non-retired metadatamapping/source resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllMetadataSources",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "metadatamapping/source response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "metadatamapping/source" ],
        "summary" : "Create with properties in request",
        "operationId" : "createMetadataSource",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MetadatamappingSourceCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "metadatamapping/source response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/metadatamapping/source/{uuid}" : {
      "get" : {
        "tags" : [ "metadatamapping/source" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getMetadataSource",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "metadatamapping/source response",
            "schema" : {
              "$ref" : "#/definitions/MetadatamappingSourceGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "metadatamapping/source" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateMetadataSource",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MetadatamappingSourceUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "metadatamapping/source response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "metadatamapping/source" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteMetadataSource",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/queue-room" : {
      "get" : {
        "tags" : [ "queue-room" ],
        "summary" : "Fetch all non-retired queue-room resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllQueueRooms",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "queue-room response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "queue-room" ],
        "summary" : "Create with properties in request",
        "operationId" : "createQueueRoom",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Queue-roomCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "queue-room response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/queue-room/{uuid}" : {
      "get" : {
        "tags" : [ "queue-room" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getQueueRoom",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "queue-room response",
            "schema" : {
              "$ref" : "#/definitions/Queue-roomGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "queue-room" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateQueueRoom",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Queue-roomUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "queue-room response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "queue-room" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteQueueRoom",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/user" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Fetch all non-retired user resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllUsers",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "user response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Create with properties in request",
        "operationId" : "createUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "user response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/user/{uuid}" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "user response",
            "schema" : {
              "$ref" : "#/definitions/UserGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "user response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "user" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/conceptmaptype" : {
      "get" : {
        "tags" : [ "conceptmaptype" ],
        "summary" : "Fetch all non-retired conceptmaptype resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllConceptMapTypes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptmaptype response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "conceptmaptype" ],
        "summary" : "Create with properties in request",
        "operationId" : "createConceptMapType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptmaptypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptmaptype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/conceptmaptype/{uuid}" : {
      "get" : {
        "tags" : [ "conceptmaptype" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getConceptMapType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptmaptype response",
            "schema" : {
              "$ref" : "#/definitions/ConceptmaptypeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "conceptmaptype" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateConceptMapType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptmaptypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptmaptype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "conceptmaptype" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteConceptMapType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/idgen/logentry" : {
      "get" : {
        "tags" : [ "idgen/logentry" ],
        "summary" : "Fetch all non-retired idgen/logentry resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllLogEntries",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fromDate",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "identifier",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "toDate",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "comment",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "source",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "generatedBy",
          "in" : "query",
          "description" : "Must be used with ",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "idgen/logentry response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/idgen/logentry/{uuid}" : {
      "get" : {
        "tags" : [ "idgen/logentry" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getLogEntry",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "idgen/logentry response",
            "schema" : {
              "$ref" : "#/definitions/IdgenLogentryGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "idgen/logentry" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteLogEntry",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/hl7" : {
      "get" : {
        "tags" : [ "hl7" ],
        "summary" : "Search for hl7",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllHL7Messages",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "hl7 response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "hl7" ],
        "summary" : "Create with properties in request",
        "operationId" : "createHL7Message",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Hl7Create"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "hl7 response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/moduleaction" : {
      "post" : {
        "tags" : [ "moduleaction" ],
        "summary" : "Create with properties in request",
        "operationId" : "createModuleAction",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ModuleactionCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "moduleaction response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/conceptclass" : {
      "get" : {
        "tags" : [ "conceptclass" ],
        "summary" : "Fetch all non-retired conceptclass resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllConceptClasses",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptclass response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "conceptclass" ],
        "summary" : "Create with properties in request",
        "operationId" : "createConceptClass",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptclassCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptclass response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/conceptclass/{uuid}" : {
      "get" : {
        "tags" : [ "conceptclass" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getConceptClass",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptclass response",
            "schema" : {
              "$ref" : "#/definitions/ConceptclassGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "conceptclass" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateConceptClass",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptclassUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptclass response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "conceptclass" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteConceptClass",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/programenrollment" : {
      "get" : {
        "tags" : [ "programenrollment" ],
        "summary" : "Search for programenrollment",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllProgramEnrollments",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "programenrollment response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "programenrollment" ],
        "summary" : "Create with properties in request",
        "operationId" : "createProgramEnrollment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProgramenrollmentCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "programenrollment response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/programenrollment/{uuid}" : {
      "get" : {
        "tags" : [ "programenrollment" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getProgramEnrollment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "programenrollment response",
            "schema" : {
              "$ref" : "#/definitions/ProgramenrollmentGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "programenrollment" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateProgramEnrollment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProgramenrollmentUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "programenrollment response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "programenrollment" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteProgramEnrollment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/patientflags/displaypoint" : {
      "get" : {
        "tags" : [ "patientflags/displaypoint" ],
        "summary" : "Fetch all non-retired patientflags/displaypoint resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllPatientFlagDisplayPoints",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "patientflags/displaypoint response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "patientflags/displaypoint" ],
        "summary" : "Create with properties in request",
        "operationId" : "createPatientFlagDisplayPoint",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatientflagsDisplaypointCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "patientflags/displaypoint response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/patientflags/displaypoint/{uuid}" : {
      "get" : {
        "tags" : [ "patientflags/displaypoint" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getPatientFlagDisplayPoint",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "patientflags/displaypoint response",
            "schema" : {
              "$ref" : "#/definitions/PatientflagsDisplaypointGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "patientflags/displaypoint" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updatePatientFlagDisplayPoint",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatientflagsDisplaypointUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "patientflags/displaypoint response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "patientflags/displaypoint" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deletePatientFlagDisplayPoint",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/cohortm/cohort-member-attribute-type" : {
      "get" : {
        "tags" : [ "cohortm/cohort-member-attribute-type" ],
        "summary" : "Fetch all non-retired cohortm/cohort-member-attribute-type resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllCohortMemberAttributeTypes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "cohortm/cohort-member-attribute-type response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "cohortm/cohort-member-attribute-type" ],
        "summary" : "Create with properties in request",
        "operationId" : "createCohortMemberAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CohortmCohort-member-attribute-typeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "cohortm/cohort-member-attribute-type response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/cohortm/cohort-member-attribute-type/{uuid}" : {
      "get" : {
        "tags" : [ "cohortm/cohort-member-attribute-type" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getCohortMemberAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "cohortm/cohort-member-attribute-type response",
            "schema" : {
              "$ref" : "#/definitions/CohortmCohort-member-attribute-typeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "cohortm/cohort-member-attribute-type" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateCohortMemberAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CohortmCohort-member-attribute-typeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "cohortm/cohort-member-attribute-type response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "cohortm/cohort-member-attribute-type" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteCohortMemberAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/cohortm/cohorttype" : {
      "get" : {
        "tags" : [ "cohortm/cohorttype" ],
        "summary" : "Fetch all non-retired cohortm/cohorttype resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllCohortTypes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "cohortm/cohorttype response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "cohortm/cohorttype" ],
        "summary" : "Create with properties in request",
        "operationId" : "createCohortType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CohortmCohorttypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "cohortm/cohorttype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/cohortm/cohorttype/{uuid}" : {
      "get" : {
        "tags" : [ "cohortm/cohorttype" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getCohortType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "cohortm/cohorttype response",
            "schema" : {
              "$ref" : "#/definitions/CohortmCohorttypeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "cohortm/cohorttype" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateCohortType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CohortmCohorttypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "cohortm/cohorttype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "cohortm/cohorttype" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteCohortType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/provider" : {
      "get" : {
        "tags" : [ "provider" ],
        "summary" : "Fetch all non-retired provider resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllProviders",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "provider response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "provider" ],
        "summary" : "Create with properties in request",
        "operationId" : "createProvider",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProviderCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "provider response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/provider/{uuid}" : {
      "get" : {
        "tags" : [ "provider" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getProvider",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "provider response",
            "schema" : {
              "$ref" : "#/definitions/ProviderGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "provider" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateProvider",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProviderUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "provider response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "provider" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteProvider",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/visitattributetype" : {
      "get" : {
        "tags" : [ "visitattributetype" ],
        "summary" : "Fetch all non-retired visitattributetype resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllVisitAttributeTypes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "visitattributetype response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "visitattributetype" ],
        "summary" : "Create with properties in request",
        "operationId" : "createVisitAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VisitattributetypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "visitattributetype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/visitattributetype/{uuid}" : {
      "get" : {
        "tags" : [ "visitattributetype" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getVisitAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "visitattributetype response",
            "schema" : {
              "$ref" : "#/definitions/VisitattributetypeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "visitattributetype" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateVisitAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VisitattributetypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "visitattributetype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "visitattributetype" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteVisitAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/role" : {
      "get" : {
        "tags" : [ "role" ],
        "summary" : "Fetch all non-retired role resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllRoles",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "role response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "role" ],
        "summary" : "Create with properties in request",
        "operationId" : "createRole",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RoleCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "role response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/role/{uuid}" : {
      "get" : {
        "tags" : [ "role" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getRole",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "role response",
            "schema" : {
              "$ref" : "#/definitions/RoleGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "role" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateRole",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RoleUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "role response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "role" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteRole",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/queue-entry" : {
      "get" : {
        "tags" : [ "queue-entry" ],
        "summary" : "Fetch all non-retired queue-entry resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllQueueEntries",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "queue-entry response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "queue-entry" ],
        "summary" : "Create with properties in request",
        "operationId" : "createQueueEntry",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Queue-entryCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "queue-entry response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/queue-entry/{uuid}" : {
      "get" : {
        "tags" : [ "queue-entry" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getQueueEntry",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "queue-entry response",
            "schema" : {
              "$ref" : "#/definitions/Queue-entryGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "queue-entry" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateQueueEntry",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Queue-entryUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "queue-entry response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "queue-entry" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteQueueEntry",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/queue" : {
      "get" : {
        "tags" : [ "queue" ],
        "summary" : "Fetch all non-retired queue resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllQueues",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "queue response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "queue" ],
        "summary" : "Create with properties in request",
        "operationId" : "createQueue",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/QueueCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "queue response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/queue/{uuid}" : {
      "get" : {
        "tags" : [ "queue" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getQueue",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "queue response",
            "schema" : {
              "$ref" : "#/definitions/QueueGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "queue" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateQueue",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/QueueUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "queue response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "queue" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteQueue",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/ordertemplates/orderTemplate" : {
      "get" : {
        "tags" : [ "ordertemplates/orderTemplate" ],
        "summary" : "Fetch all non-retired ordertemplates/orderTemplate resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllOrderTemplateses",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ordertemplates/orderTemplate response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "ordertemplates/orderTemplate" ],
        "summary" : "Create with properties in request",
        "operationId" : "createOrderTemplates",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OrdertemplatesOrderTemplateCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "ordertemplates/orderTemplate response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/ordertemplates/orderTemplate/{uuid}" : {
      "get" : {
        "tags" : [ "ordertemplates/orderTemplate" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getOrderTemplates",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ordertemplates/orderTemplate response",
            "schema" : {
              "$ref" : "#/definitions/OrdertemplatesOrderTemplateGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "ordertemplates/orderTemplate" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateOrderTemplates",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OrdertemplatesOrderTemplateUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "ordertemplates/orderTemplate response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "ordertemplates/orderTemplate" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteOrderTemplates",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/encounterrole" : {
      "get" : {
        "tags" : [ "encounterrole" ],
        "summary" : "Fetch all non-retired encounterrole resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllEncounterRoles",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "encounterrole response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "encounterrole" ],
        "summary" : "Create with properties in request",
        "operationId" : "createEncounterRole",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EncounterroleCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "encounterrole response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/encounterrole/{uuid}" : {
      "get" : {
        "tags" : [ "encounterrole" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getEncounterRole",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "encounterrole response",
            "schema" : {
              "$ref" : "#/definitions/EncounterroleGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "encounterrole" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateEncounterRole",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EncounterroleUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "encounterrole response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "encounterrole" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteEncounterRole",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/attachment" : {
      "get" : {
        "tags" : [ "attachment" ],
        "summary" : "Search for attachment",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllAttachments",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "attachment response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "attachment" ],
        "summary" : "Create with properties in request",
        "operationId" : "createAttachment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AttachmentCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attachment response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/attachment/{uuid}" : {
      "get" : {
        "tags" : [ "attachment" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getAttachment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "attachment response",
            "schema" : {
              "$ref" : "#/definitions/AttachmentGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "attachment" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateAttachment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AttachmentUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attachment response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "attachment" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteAttachment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/reportingrest/cohort" : {
      "get" : {
        "tags" : [ "reportingrest/cohort" ],
        "summary" : "Search for reportingrest/cohort",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllEvaluatedCohorts",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "reportingrest/cohort response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "reportingrest/cohort" ],
        "summary" : "Create with properties in request",
        "operationId" : "createEvaluatedCohort",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReportingrestCohortCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "reportingrest/cohort response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/reportingrest/cohort/{uuid}" : {
      "get" : {
        "tags" : [ "reportingrest/cohort" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getEvaluatedCohort",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "reportingrest/cohort response",
            "schema" : {
              "$ref" : "#/definitions/ReportingrestCohortGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "reportingrest/cohort" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateEvaluatedCohort",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReportingrestCohortUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "reportingrest/cohort response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "reportingrest/cohort" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteEvaluatedCohort",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/hl7source" : {
      "get" : {
        "tags" : [ "hl7source" ],
        "summary" : "Search for hl7source",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllHL7Sources",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "hl7source response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "hl7source" ],
        "summary" : "Create with properties in request",
        "operationId" : "createHL7Source",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Hl7sourceCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "hl7source response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/hl7source/{uuid}" : {
      "get" : {
        "tags" : [ "hl7source" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getHL7Source",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "hl7source response",
            "schema" : {
              "$ref" : "#/definitions/Hl7sourceGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "hl7source" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateHL7Source",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Hl7sourceUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "hl7source response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "hl7source" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteHL7Source",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/patient" : {
      "get" : {
        "tags" : [ "patient" ],
        "summary" : "Search for patient",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllPatients",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "identifier",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "includeDead",
          "in" : "query",
          "description" : "Must be used with q",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "searchType",
          "in" : "query",
          "description" : "Must be used with identifier",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "patient response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "patient" ],
        "summary" : "Create with properties in request",
        "operationId" : "createPatient",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatientCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "patient response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/patient/{uuid}" : {
      "get" : {
        "tags" : [ "patient" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getPatient",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "patient response",
            "schema" : {
              "$ref" : "#/definitions/PatientGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "patient" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updatePatient",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatientUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "patient response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "patient" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deletePatient",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/relationship" : {
      "get" : {
        "tags" : [ "relationship" ],
        "summary" : "Fetch all non-retired relationship resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllRelationships",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "personB",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "personA",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "person",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "relation",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "relatedPerson",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "relationship response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "relationship" ],
        "summary" : "Create with properties in request",
        "operationId" : "createRelationship",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RelationshipCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "relationship response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/relationship/{uuid}" : {
      "get" : {
        "tags" : [ "relationship" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getRelationship",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "relationship response",
            "schema" : {
              "$ref" : "#/definitions/RelationshipGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "relationship" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateRelationship",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RelationshipUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "relationship response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "relationship" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteRelationship",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/taskaction" : {
      "post" : {
        "tags" : [ "taskaction" ],
        "summary" : "Create with properties in request",
        "operationId" : "createTaskAction",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TaskactionCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "taskaction response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/taskaction/{uuid}" : {
      "get" : {
        "tags" : [ "taskaction" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getTaskAction",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "taskaction response",
            "schema" : {
              "$ref" : "#/definitions/TaskactionGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/conceptstateconversion" : {
      "get" : {
        "tags" : [ "conceptstateconversion" ],
        "summary" : "Fetch all non-retired conceptstateconversion resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllConceptStateConversions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptstateconversion response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "conceptstateconversion" ],
        "summary" : "Create with properties in request",
        "operationId" : "createConceptStateConversion",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptstateconversionCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptstateconversion response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/conceptstateconversion/{uuid}" : {
      "get" : {
        "tags" : [ "conceptstateconversion" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getConceptStateConversion",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptstateconversion response",
            "schema" : {
              "$ref" : "#/definitions/ConceptstateconversionGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "conceptstateconversion" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateConceptStateConversion",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptstateconversionUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptstateconversion response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "conceptstateconversion" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteConceptStateConversion",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/patientflags/patientflag" : {
      "get" : {
        "tags" : [ "patientflags/patientflag" ],
        "summary" : "Search for patientflags/patientflag",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllPatientFlags",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "patientflags/patientflag response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "patientflags/patientflag" ],
        "summary" : "Create with properties in request",
        "operationId" : "createPatientFlag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatientflagsPatientflagCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "patientflags/patientflag response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/patientflags/patientflag/{uuid}" : {
      "get" : {
        "tags" : [ "patientflags/patientflag" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getPatientFlag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "patientflags/patientflag response",
            "schema" : {
              "$ref" : "#/definitions/PatientflagsPatientflagGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "patientflags/patientflag" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deletePatientFlag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/locationattributetype" : {
      "get" : {
        "tags" : [ "locationattributetype" ],
        "summary" : "Fetch all non-retired locationattributetype resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllLocationAttributeTypes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "locationattributetype response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "locationattributetype" ],
        "summary" : "Create with properties in request",
        "operationId" : "createLocationAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LocationattributetypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "locationattributetype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/locationattributetype/{uuid}" : {
      "get" : {
        "tags" : [ "locationattributetype" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getLocationAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "locationattributetype response",
            "schema" : {
              "$ref" : "#/definitions/LocationattributetypeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "locationattributetype" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateLocationAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LocationattributetypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "locationattributetype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "locationattributetype" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteLocationAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/cohort" : {
      "get" : {
        "tags" : [ "cohort" ],
        "summary" : "Fetch all non-retired cohort resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllCohorts",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "cohort response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "cohort" ],
        "summary" : "Create with properties in request",
        "operationId" : "createCohort",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CohortCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "cohort response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/cohort/{uuid}" : {
      "get" : {
        "tags" : [ "cohort" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getCohort",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "cohort response",
            "schema" : {
              "$ref" : "#/definitions/CohortGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "cohort" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateCohort",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CohortUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "cohort response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "cohort" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteCohort",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/openconceptlab/importaction" : {
      "get" : {
        "tags" : [ "openconceptlab/importaction" ],
        "summary" : "Search for openconceptlab/importaction",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllImportActions",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "openconceptlab/importaction response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "openconceptlab/importaction" ],
        "summary" : "Create with properties in request",
        "operationId" : "createImportAction",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OpenconceptlabImportactionCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "openconceptlab/importaction response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/idgen/identifiersource" : {
      "get" : {
        "tags" : [ "idgen/identifiersource" ],
        "summary" : "Fetch all non-retired idgen/identifiersource resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllIdentifierSources",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "t",
          "in" : "query",
          "description" : "The type of Subclass Resource to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "idgen/identifiersource response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "idgen/identifiersource" ],
        "summary" : "Create with properties in request",
        "operationId" : "createIdentifierSource",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IdgenIdentifiersourceCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "idgen/identifiersource response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/idgen/identifiersource/{uuid}" : {
      "get" : {
        "tags" : [ "idgen/identifiersource" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getIdentifierSource",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "idgen/identifiersource response",
            "schema" : {
              "$ref" : "#/definitions/IdgenIdentifiersourceGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "idgen/identifiersource" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateIdentifierSource",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IdgenIdentifiersourceUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "idgen/identifiersource response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "idgen/identifiersource" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteIdentifierSource",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/reportingrest/reportDefinition" : {
      "get" : {
        "tags" : [ "reportingrest/reportDefinition" ],
        "summary" : "Fetch all non-retired reportingrest/reportDefinition resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllReportDefinitions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "reportingrest/reportDefinition response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "reportingrest/reportDefinition" ],
        "summary" : "Create with properties in request",
        "operationId" : "createReportDefinition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReportingrestReportDefinitionCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "reportingrest/reportDefinition response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/reportingrest/reportDefinition/{uuid}" : {
      "get" : {
        "tags" : [ "reportingrest/reportDefinition" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getReportDefinition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "reportingrest/reportDefinition response",
            "schema" : {
              "$ref" : "#/definitions/ReportingrestReportDefinitionGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "reportingrest/reportDefinition" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateReportDefinition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReportingrestReportDefinitionUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "reportingrest/reportDefinition response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "reportingrest/reportDefinition" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteReportDefinition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/obs" : {
      "get" : {
        "tags" : [ "obs" ],
        "summary" : "Search for obs",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllObses",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "concepts",
          "in" : "query",
          "description" : "Must be used with patient",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "patient",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "conceptList",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "concept",
          "in" : "query",
          "description" : "Must be used with patient",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "groupingConcepts",
          "in" : "query",
          "description" : "Must be used with patient",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "answers",
          "in" : "query",
          "description" : "Must be used with patient",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "obs response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "obs" ],
        "summary" : "Create with properties in request",
        "operationId" : "createObs",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ObsCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "obs response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/obs/{uuid}" : {
      "get" : {
        "tags" : [ "obs" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getObs",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "obs response",
            "schema" : {
              "$ref" : "#/definitions/ObsGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "obs" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateObs",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ObsUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "obs response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "obs" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteObs",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/concept" : {
      "get" : {
        "tags" : [ "concept" ],
        "summary" : "Fetch all non-retired concept resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllConcepts",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "query",
          "description" : "Must be used with source",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "references",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "searchType",
          "in" : "query",
          "description" : "Must be used with name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "term",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "source",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "class",
          "in" : "query",
          "description" : "Must be used with name",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "concept response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "concept" ],
        "summary" : "Create with properties in request",
        "operationId" : "createConcept",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "concept response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/concept/{uuid}" : {
      "get" : {
        "tags" : [ "concept" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getConcept",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "concept response",
            "schema" : {
              "$ref" : "#/definitions/ConceptGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "concept" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateConcept",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "concept response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "concept" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteConcept",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/conceptreferencetermmap" : {
      "get" : {
        "tags" : [ "conceptreferencetermmap" ],
        "summary" : "Search for conceptreferencetermmap",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllConceptReferenceTermMaps",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "maps",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "termB",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "termA",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "maptype",
          "in" : "query",
          "description" : "Must be used with maps",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptreferencetermmap response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "conceptreferencetermmap" ],
        "summary" : "Create with properties in request",
        "operationId" : "createConceptReferenceTermMap",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptreferencetermmapCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptreferencetermmap response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/conceptreferencetermmap/{uuid}" : {
      "get" : {
        "tags" : [ "conceptreferencetermmap" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getConceptReferenceTermMap",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptreferencetermmap response",
            "schema" : {
              "$ref" : "#/definitions/ConceptreferencetermmapGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "conceptreferencetermmap" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateConceptReferenceTermMap",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptreferencetermmapUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptreferencetermmap response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "conceptreferencetermmap" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteConceptReferenceTermMap",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/workflow" : {
      "get" : {
        "tags" : [ "workflow" ],
        "summary" : "Search for workflow",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllProgramWorkflows",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "workflow response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "workflow" ],
        "summary" : "Create with properties in request",
        "operationId" : "createProgramWorkflow",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/WorkflowCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "workflow response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/workflow/{uuid}" : {
      "get" : {
        "tags" : [ "workflow" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getProgramWorkflow",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "workflow response",
            "schema" : {
              "$ref" : "#/definitions/WorkflowGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "workflow" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateProgramWorkflow",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/WorkflowUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "workflow response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "workflow" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteProgramWorkflow",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/cohortm/cohortattributetype" : {
      "get" : {
        "tags" : [ "cohortm/cohortattributetype" ],
        "summary" : "Fetch all non-retired cohortm/cohortattributetype resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllCohortAttributeTypes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "cohortm/cohortattributetype response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "cohortm/cohortattributetype" ],
        "summary" : "Create with properties in request",
        "operationId" : "createCohortAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CohortmCohortattributetypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "cohortm/cohortattributetype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/cohortm/cohortattributetype/{uuid}" : {
      "get" : {
        "tags" : [ "cohortm/cohortattributetype" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getCohortAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "cohortm/cohortattributetype response",
            "schema" : {
              "$ref" : "#/definitions/CohortmCohortattributetypeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "cohortm/cohortattributetype" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateCohortAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CohortmCohortattributetypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "cohortm/cohortattributetype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "cohortm/cohortattributetype" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteCohortAttributeType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/encountertype" : {
      "get" : {
        "tags" : [ "encountertype" ],
        "summary" : "Fetch all non-retired encountertype resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllEncounterTypes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "encountertype response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "encountertype" ],
        "summary" : "Create with properties in request",
        "operationId" : "createEncounterType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EncountertypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "encountertype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/encountertype/{uuid}" : {
      "get" : {
        "tags" : [ "encountertype" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getEncounterType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "encountertype response",
            "schema" : {
              "$ref" : "#/definitions/EncountertypeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "encountertype" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateEncounterType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EncountertypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "encountertype response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "encountertype" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteEncounterType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/reportingrest/reportdata" : {
      "get" : {
        "tags" : [ "reportingrest/reportdata" ],
        "summary" : "Search for reportingrest/reportdata",
        "description" : "At least one search parameter must be specified",
        "operationId" : "getAllEvaluatedReportDefinitions",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "reportingrest/reportdata response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "reportingrest/reportdata" ],
        "summary" : "Create with properties in request",
        "operationId" : "createEvaluatedReportDefinition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReportingrestReportdataCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "reportingrest/reportdata response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/reportingrest/reportdata/{uuid}" : {
      "get" : {
        "tags" : [ "reportingrest/reportdata" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getEvaluatedReportDefinition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "reportingrest/reportdata response",
            "schema" : {
              "$ref" : "#/definitions/ReportingrestReportdataGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "reportingrest/reportdata" ],
        "summary" : "Edit with given uuid, only modifying properties in request",
        "operationId" : "updateEvaluatedReportDefinition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReportingrestReportdataUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "reportingrest/reportdata response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "reportingrest/reportdata" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteEvaluatedReportDefinition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/openconceptlab/import" : {
      "get" : {
        "tags" : [ "openconceptlab/import" ],
        "summary" : "Fetch all non-retired openconceptlab/import resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllImports",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "runningImport",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "openconceptlab/import response",
            "schema" : {
              "$ref" : "#/definitions/FetchAll"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "openconceptlab/import" ],
        "summary" : "Create with properties in request",
        "operationId" : "createImport",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OpenconceptlabImportCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "openconceptlab/import response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/openconceptlab/import/{uuid}" : {
      "get" : {
        "tags" : [ "openconceptlab/import" ],
        "summary" : "Fetch by uuid",
        "operationId" : "getImport",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "openconceptlab/import response",
            "schema" : {
              "$ref" : "#/definitions/OpenconceptlabImportGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "openconceptlab/import" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteImport",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/concept/{parent-uuid}/mapping" : {
      "get" : {
        "tags" : [ "concept" ],
        "summary" : "Fetch all non-retired mapping subresources",
        "operationId" : "getAllConceptMaps",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "mapping response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ConceptMappingGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "concept" ],
        "summary" : "Create mapping subresource with properties in request",
        "operationId" : "createConceptMap",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptMappingCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "mapping response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/concept/{parent-uuid}/mapping/{uuid}" : {
      "get" : {
        "tags" : [ "concept" ],
        "summary" : "Fetch mapping subresources by uuid",
        "operationId" : "getConceptMap",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "mapping response",
            "schema" : {
              "$ref" : "#/definitions/ConceptMappingGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "concept" ],
        "summary" : "edit mapping subresource with given uuid, only modifying properties in request",
        "operationId" : "updateConceptMap",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptMappingUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "mapping response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "concept" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteConceptMap",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/cohortm/cohortmember/{parent-uuid}/attribute" : {
      "get" : {
        "tags" : [ "cohortm/cohortmember" ],
        "summary" : "Fetch all non-retired attribute subresources",
        "operationId" : "getAllCohortMemberAttributes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CohortmCohortmemberAttributeGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "cohortm/cohortmember" ],
        "summary" : "Create attribute subresource with properties in request",
        "operationId" : "createCohortMemberAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CohortmCohortmemberAttributeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/cohortm/cohortmember/{parent-uuid}/attribute/{uuid}" : {
      "get" : {
        "tags" : [ "cohortm/cohortmember" ],
        "summary" : "Fetch attribute subresources by uuid",
        "operationId" : "getCohortMemberAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/CohortmCohortmemberAttributeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "cohortm/cohortmember" ],
        "summary" : "edit attribute subresource with given uuid, only modifying properties in request",
        "operationId" : "updateCohortMemberAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CohortmCohortmemberAttributeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "cohortm/cohortmember" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteCohortMemberAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/metadatamapping/metadataset/{parent-uuid}/members" : {
      "get" : {
        "tags" : [ "metadatamapping/metadataset" ],
        "summary" : "Fetch all non-retired members subresources",
        "operationId" : "getAllMetadataSetMembers",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "members response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/MetadatamappingMetadatasetMembersGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "metadatamapping/metadataset" ],
        "summary" : "Create members subresource with properties in request",
        "operationId" : "createMetadataSetMember",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MetadatamappingMetadatasetMembersCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "members response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/metadatamapping/metadataset/{parent-uuid}/members/{uuid}" : {
      "get" : {
        "tags" : [ "metadatamapping/metadataset" ],
        "summary" : "Fetch members subresources by uuid",
        "operationId" : "getMetadataSetMember",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "members response",
            "schema" : {
              "$ref" : "#/definitions/MetadatamappingMetadatasetMembersGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "metadatamapping/metadataset" ],
        "summary" : "edit members subresource with given uuid, only modifying properties in request",
        "operationId" : "updateMetadataSetMember",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MetadatamappingMetadatasetMembersUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "members response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "metadatamapping/metadataset" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteMetadataSetMember",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/openconceptlab/import/{parent-uuid}/item" : {
      "get" : {
        "tags" : [ "openconceptlab/import" ],
        "summary" : "Fetch all non-retired item resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllItems",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "item response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/OpenconceptlabImportItemGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/openconceptlab/import/{parent-uuid}/item/{uuid}" : {
      "get" : {
        "tags" : [ "openconceptlab/import" ],
        "summary" : "Fetch item subresources by uuid",
        "operationId" : "getItem",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "item response",
            "schema" : {
              "$ref" : "#/definitions/OpenconceptlabImportItemGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "openconceptlab/import" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteItem",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/customdatatype/{parent-uuid}/handlers" : {
      "get" : {
        "tags" : [ "customdatatype" ],
        "summary" : "Fetch all non-retired handlers subresources",
        "operationId" : "getAllCustomDatatypeHandlers",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "handlers response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CustomdatatypeHandlersGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/workflow/{parent-uuid}/state" : {
      "get" : {
        "tags" : [ "workflow" ],
        "summary" : "Fetch all non-retired state subresources",
        "operationId" : "getAllProgramWorkflowStates",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "state response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/WorkflowStateGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "workflow" ],
        "summary" : "Create state subresource with properties in request",
        "operationId" : "createProgramWorkflowState",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/WorkflowStateCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "state response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/workflow/{parent-uuid}/state/{uuid}" : {
      "get" : {
        "tags" : [ "workflow" ],
        "summary" : "Fetch state subresources by uuid",
        "operationId" : "getProgramWorkflowState",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "state response",
            "schema" : {
              "$ref" : "#/definitions/WorkflowStateGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "workflow" ],
        "summary" : "edit state subresource with given uuid, only modifying properties in request",
        "operationId" : "updateProgramWorkflowState",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/WorkflowStateUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "state response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "workflow" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteProgramWorkflowState",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/provider/{parent-uuid}/attribute" : {
      "get" : {
        "tags" : [ "provider" ],
        "summary" : "Fetch all non-retired attribute subresources",
        "operationId" : "getAllProviderAttributes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ProviderAttributeGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "provider" ],
        "summary" : "Create attribute subresource with properties in request",
        "operationId" : "createProviderAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProviderAttributeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/provider/{parent-uuid}/attribute/{uuid}" : {
      "get" : {
        "tags" : [ "provider" ],
        "summary" : "Fetch attribute subresources by uuid",
        "operationId" : "getProviderAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/ProviderAttributeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "provider" ],
        "summary" : "edit attribute subresource with given uuid, only modifying properties in request",
        "operationId" : "updateProviderAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProviderAttributeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "provider" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteProviderAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/alert/{parent-uuid}/recipient" : {
      "get" : {
        "tags" : [ "alert" ],
        "summary" : "Fetch all non-retired recipient subresources",
        "operationId" : "getAllAlertRecipients",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "recipient response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/AlertRecipientGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "alert" ],
        "summary" : "Create recipient subresource with properties in request",
        "operationId" : "createAlertRecipient",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AlertRecipientCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "recipient response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/alert/{parent-uuid}/recipient/{uuid}" : {
      "get" : {
        "tags" : [ "alert" ],
        "summary" : "Fetch recipient subresources by uuid",
        "operationId" : "getAlertRecipient",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "recipient response",
            "schema" : {
              "$ref" : "#/definitions/AlertRecipientGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "alert" ],
        "summary" : "edit recipient subresource with given uuid, only modifying properties in request",
        "operationId" : "updateAlertRecipient",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AlertRecipientUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "recipient response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "alert" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteAlertRecipient",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/person/{parent-uuid}/name" : {
      "get" : {
        "tags" : [ "person" ],
        "summary" : "Fetch all non-retired name subresources",
        "operationId" : "getAllPersonNames",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "name response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/PersonNameGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "person" ],
        "summary" : "Create name subresource with properties in request",
        "operationId" : "createPersonName",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PersonNameCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "name response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/person/{parent-uuid}/name/{uuid}" : {
      "get" : {
        "tags" : [ "person" ],
        "summary" : "Fetch name subresources by uuid",
        "operationId" : "getPersonName",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "name response",
            "schema" : {
              "$ref" : "#/definitions/PersonNameGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "person" ],
        "summary" : "edit name subresource with given uuid, only modifying properties in request",
        "operationId" : "updatePersonName",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PersonNameUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "name response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "person" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deletePersonName",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/cohortm/cohort/{parent-uuid}/attribute" : {
      "get" : {
        "tags" : [ "cohortm/cohort" ],
        "summary" : "Fetch all non-retired attribute subresources",
        "operationId" : "getAllCohortAttributes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CohortmCohortAttributeGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "cohortm/cohort" ],
        "summary" : "Create attribute subresource with properties in request",
        "operationId" : "createCohortAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CohortmCohortAttributeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/cohortm/cohort/{parent-uuid}/attribute/{uuid}" : {
      "get" : {
        "tags" : [ "cohortm/cohort" ],
        "summary" : "Fetch attribute subresources by uuid",
        "operationId" : "getCohortAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/CohortmCohortAttributeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "cohortm/cohort" ],
        "summary" : "edit attribute subresource with given uuid, only modifying properties in request",
        "operationId" : "updateCohortAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CohortmCohortAttributeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "cohortm/cohort" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteCohortAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/patient/{parent-uuid}/identifier" : {
      "get" : {
        "tags" : [ "patient" ],
        "summary" : "Fetch all non-retired identifier subresources",
        "operationId" : "getAllPatientIdentifiers",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "identifier response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/PatientIdentifierGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "patient" ],
        "summary" : "Create identifier subresource with properties in request",
        "operationId" : "createPatientIdentifier",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatientIdentifierCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "identifier response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/patient/{parent-uuid}/identifier/{uuid}" : {
      "get" : {
        "tags" : [ "patient" ],
        "summary" : "Fetch identifier subresources by uuid",
        "operationId" : "getPatientIdentifier",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "identifier response",
            "schema" : {
              "$ref" : "#/definitions/PatientIdentifierGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "patient" ],
        "summary" : "edit identifier subresource with given uuid, only modifying properties in request",
        "operationId" : "updatePatientIdentifier",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatientIdentifierUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "identifier response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "patient" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deletePatientIdentifier",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/programenrollment/{parent-uuid}/state" : {
      "post" : {
        "tags" : [ "programenrollment" ],
        "summary" : "Create state subresource with properties in request",
        "operationId" : "createPatientState",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProgramenrollmentStateCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "state response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/programenrollment/{parent-uuid}/state/{uuid}" : {
      "get" : {
        "tags" : [ "programenrollment" ],
        "summary" : "Fetch state subresources by uuid",
        "operationId" : "getPatientState",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "state response",
            "schema" : {
              "$ref" : "#/definitions/ProgramenrollmentStateGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "programenrollment" ],
        "summary" : "edit state subresource with given uuid, only modifying properties in request",
        "operationId" : "updatePatientState",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProgramenrollmentStateUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "state response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "programenrollment" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deletePatientState",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/field/{parent-uuid}/answer" : {
      "get" : {
        "tags" : [ "field" ],
        "summary" : "Fetch all non-retired answer subresources",
        "operationId" : "getAllFieldAnswers",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "answer response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/FieldAnswerGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "field" ],
        "summary" : "Create answer subresource with properties in request",
        "operationId" : "createFieldAnswer",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FieldAnswerCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "answer response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/field/{parent-uuid}/answer/{uuid}" : {
      "get" : {
        "tags" : [ "field" ],
        "summary" : "Fetch answer subresources by uuid",
        "operationId" : "getFieldAnswer",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "answer response",
            "schema" : {
              "$ref" : "#/definitions/FieldAnswerGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "field" ],
        "summary" : "edit answer subresource with given uuid, only modifying properties in request",
        "operationId" : "updateFieldAnswer",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FieldAnswerUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "answer response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "field" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteFieldAnswer",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/drug/{parent-uuid}/ingredient" : {
      "get" : {
        "tags" : [ "drug" ],
        "summary" : "Fetch all non-retired ingredient subresources",
        "operationId" : "getAllDrugIngredients",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "ingredient response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/DrugIngredientGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "drug" ],
        "summary" : "Create ingredient subresource with properties in request",
        "operationId" : "createDrugIngredient",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DrugIngredientCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "ingredient response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/drug/{parent-uuid}/ingredient/{uuid}" : {
      "get" : {
        "tags" : [ "drug" ],
        "summary" : "Fetch ingredient subresources by uuid",
        "operationId" : "getDrugIngredient",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "ingredient response",
            "schema" : {
              "$ref" : "#/definitions/DrugIngredientGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "drug" ],
        "summary" : "edit ingredient subresource with given uuid, only modifying properties in request",
        "operationId" : "updateDrugIngredient",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DrugIngredientUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "ingredient response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "drug" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteDrugIngredient",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/programenrollment/{parent-uuid}/attribute" : {
      "get" : {
        "tags" : [ "programenrollment" ],
        "summary" : "Fetch all non-retired attribute subresources",
        "operationId" : "getAllPatientProgramAttributes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ProgramenrollmentAttributeGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "programenrollment" ],
        "summary" : "Create attribute subresource with properties in request",
        "operationId" : "createPatientProgramAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProgramenrollmentAttributeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/programenrollment/{parent-uuid}/attribute/{uuid}" : {
      "get" : {
        "tags" : [ "programenrollment" ],
        "summary" : "Fetch attribute subresources by uuid",
        "operationId" : "getPatientProgramAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/ProgramenrollmentAttributeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "programenrollment" ],
        "summary" : "edit attribute subresource with given uuid, only modifying properties in request",
        "operationId" : "updatePatientProgramAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProgramenrollmentAttributeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "programenrollment" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deletePatientProgramAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/person/{parent-uuid}/attribute" : {
      "get" : {
        "tags" : [ "person" ],
        "summary" : "Fetch all non-retired attribute subresources",
        "operationId" : "getAllPersonAttributes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/PersonAttributeGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "person" ],
        "summary" : "Create attribute subresource with properties in request",
        "operationId" : "createPersonAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PersonAttributeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/person/{parent-uuid}/attribute/{uuid}" : {
      "get" : {
        "tags" : [ "person" ],
        "summary" : "Fetch attribute subresources by uuid",
        "operationId" : "getPersonAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/PersonAttributeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "person" ],
        "summary" : "edit attribute subresource with given uuid, only modifying properties in request",
        "operationId" : "updatePersonAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PersonAttributeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "person" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deletePersonAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/concept/{parent-uuid}/name" : {
      "get" : {
        "tags" : [ "concept" ],
        "summary" : "Fetch all non-retired name subresources",
        "operationId" : "getAllConceptNames",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "name response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ConceptNameGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "concept" ],
        "summary" : "Create name subresource with properties in request",
        "operationId" : "createConceptName",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptNameCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "name response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/concept/{parent-uuid}/name/{uuid}" : {
      "get" : {
        "tags" : [ "concept" ],
        "summary" : "Fetch name subresources by uuid",
        "operationId" : "getConceptName",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "name response",
            "schema" : {
              "$ref" : "#/definitions/ConceptNameGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "concept" ],
        "summary" : "edit name subresource with given uuid, only modifying properties in request",
        "operationId" : "updateConceptName",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptNameUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "name response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "concept" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteConceptName",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/encounter/{parent-uuid}/encounterprovider" : {
      "get" : {
        "tags" : [ "encounter" ],
        "summary" : "Fetch all non-retired encounterprovider subresources",
        "operationId" : "getAllEncounterProviders",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "encounterprovider response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/EncounterEncounterproviderGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "encounter" ],
        "summary" : "Create encounterprovider subresource with properties in request",
        "operationId" : "createEncounterProvider",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EncounterEncounterproviderCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "encounterprovider response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/encounter/{parent-uuid}/encounterprovider/{uuid}" : {
      "get" : {
        "tags" : [ "encounter" ],
        "summary" : "Fetch encounterprovider subresources by uuid",
        "operationId" : "getEncounterProvider",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "encounterprovider response",
            "schema" : {
              "$ref" : "#/definitions/EncounterEncounterproviderGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "encounter" ],
        "summary" : "edit encounterprovider subresource with given uuid, only modifying properties in request",
        "operationId" : "updateEncounterProvider",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EncounterEncounterproviderUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "encounterprovider response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "encounter" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteEncounterProvider",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/patient/{parent-uuid}/allergy" : {
      "post" : {
        "tags" : [ "patient" ],
        "summary" : "Create allergy subresource with properties in request",
        "operationId" : "createPatientAllergy",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatientAllergyCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "allergy response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/patient/{parent-uuid}/allergy/{uuid}" : {
      "get" : {
        "tags" : [ "patient" ],
        "summary" : "Fetch allergy subresources by uuid",
        "operationId" : "getPatientAllergy",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "allergy response",
            "schema" : {
              "$ref" : "#/definitions/PatientAllergyGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "patient" ],
        "summary" : "edit allergy subresource with given uuid, only modifying properties in request",
        "operationId" : "updatePatientAllergy",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatientAllergyUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "allergy response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "patient" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deletePatientAllergy",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/concept/{parent-uuid}/description" : {
      "get" : {
        "tags" : [ "concept" ],
        "summary" : "Fetch all non-retired description subresources",
        "operationId" : "getAllConceptDescriptions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "description response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ConceptDescriptionGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "concept" ],
        "summary" : "Create description subresource with properties in request",
        "operationId" : "createConceptDescription",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptDescriptionCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "description response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/concept/{parent-uuid}/description/{uuid}" : {
      "get" : {
        "tags" : [ "concept" ],
        "summary" : "Fetch description subresources by uuid",
        "operationId" : "getConceptDescription",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "description response",
            "schema" : {
              "$ref" : "#/definitions/ConceptDescriptionGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "concept" ],
        "summary" : "edit description subresource with given uuid, only modifying properties in request",
        "operationId" : "updateConceptDescription",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptDescriptionUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "description response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "concept" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteConceptDescription",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/person/{parent-uuid}/address" : {
      "get" : {
        "tags" : [ "person" ],
        "summary" : "Fetch all non-retired address subresources",
        "operationId" : "getAllPersonAddresses",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "address response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/PersonAddressGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "person" ],
        "summary" : "Create address subresource with properties in request",
        "operationId" : "createPersonAddress",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PersonAddressCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "address response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/person/{parent-uuid}/address/{uuid}" : {
      "get" : {
        "tags" : [ "person" ],
        "summary" : "Fetch address subresources by uuid",
        "operationId" : "getPersonAddress",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "address response",
            "schema" : {
              "$ref" : "#/definitions/PersonAddressGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "person" ],
        "summary" : "edit address subresource with given uuid, only modifying properties in request",
        "operationId" : "updatePersonAddress",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PersonAddressUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "address response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "person" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deletePersonAddress",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/location/{parent-uuid}/attribute" : {
      "get" : {
        "tags" : [ "location" ],
        "summary" : "Fetch all non-retired attribute resources or perform search",
        "description" : "All search parameters are optional",
        "operationId" : "getAllLocationAttributes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/LocationAttributeGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "location" ],
        "summary" : "Create attribute subresource with properties in request",
        "operationId" : "createLocationAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LocationAttributeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/location/{parent-uuid}/attribute/{uuid}" : {
      "get" : {
        "tags" : [ "location" ],
        "summary" : "Fetch attribute subresources by uuid",
        "operationId" : "getLocationAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/LocationAttributeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "location" ],
        "summary" : "edit attribute subresource with given uuid, only modifying properties in request",
        "operationId" : "updateLocationAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LocationAttributeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "location" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteLocationAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/order/{parent-uuid}/fulfillerdetails" : {
      "post" : {
        "tags" : [ "order" ],
        "summary" : "Create fulfillerdetails subresource with properties in request",
        "operationId" : "createFulfillerDetails",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OrderFulfillerdetailsCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "fulfillerdetails response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/orderset/{parent-uuid}/ordersetmember" : {
      "get" : {
        "tags" : [ "orderset" ],
        "summary" : "Fetch all non-retired ordersetmember subresources",
        "operationId" : "getAllOrderSetMembers",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "ordersetmember response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/OrdersetOrdersetmemberGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "orderset" ],
        "summary" : "Create ordersetmember subresource with properties in request",
        "operationId" : "createOrderSetMember",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OrdersetOrdersetmemberCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "ordersetmember response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/orderset/{parent-uuid}/ordersetmember/{uuid}" : {
      "get" : {
        "tags" : [ "orderset" ],
        "summary" : "Fetch ordersetmember subresources by uuid",
        "operationId" : "getOrderSetMember",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "ordersetmember response",
            "schema" : {
              "$ref" : "#/definitions/OrdersetOrdersetmemberGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "orderset" ],
        "summary" : "edit ordersetmember subresource with given uuid, only modifying properties in request",
        "operationId" : "updateOrderSetMember",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OrdersetOrdersetmemberUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "ordersetmember response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "orderset" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteOrderSetMember",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/concept/{parent-uuid}/attribute" : {
      "get" : {
        "tags" : [ "concept" ],
        "summary" : "Fetch all non-retired attribute subresources",
        "operationId" : "getAllConceptAttributes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ConceptAttributeGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "concept" ],
        "summary" : "Create attribute subresource with properties in request",
        "operationId" : "createConceptAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptAttributeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/concept/{parent-uuid}/attribute/{uuid}" : {
      "get" : {
        "tags" : [ "concept" ],
        "summary" : "Fetch attribute subresources by uuid",
        "operationId" : "getConceptAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/ConceptAttributeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "concept" ],
        "summary" : "edit attribute subresource with given uuid, only modifying properties in request",
        "operationId" : "updateConceptAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConceptAttributeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "concept" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteConceptAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/cohort/{parent-uuid}/membership" : {
      "get" : {
        "tags" : [ "cohort" ],
        "summary" : "Fetch all non-retired membership subresources",
        "operationId" : "getAllCohortMemberships",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "membership response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CohortMembershipGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "cohort" ],
        "summary" : "Create membership subresource with properties in request",
        "operationId" : "createCohortMembership",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CohortMembershipCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "membership response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/cohort/{parent-uuid}/membership/{uuid}" : {
      "get" : {
        "tags" : [ "cohort" ],
        "summary" : "Fetch membership subresources by uuid",
        "operationId" : "getCohortMembership",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "membership response",
            "schema" : {
              "$ref" : "#/definitions/CohortMembershipGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "cohort" ],
        "summary" : "edit membership subresource with given uuid, only modifying properties in request",
        "operationId" : "updateCohortMembership",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CohortMembershipUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "membership response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "cohort" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteCohortMembership",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/form/{parent-uuid}/formfield" : {
      "get" : {
        "tags" : [ "form" ],
        "summary" : "Fetch all non-retired formfield subresources",
        "operationId" : "getAllFormFields",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "formfield response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/FormFormfieldGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "form" ],
        "summary" : "Create formfield subresource with properties in request",
        "operationId" : "createFormField",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FormFormfieldCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "formfield response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/form/{parent-uuid}/formfield/{uuid}" : {
      "get" : {
        "tags" : [ "form" ],
        "summary" : "Fetch formfield subresources by uuid",
        "operationId" : "getFormField",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "formfield response",
            "schema" : {
              "$ref" : "#/definitions/FormFormfieldGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "form" ],
        "summary" : "edit formfield subresource with given uuid, only modifying properties in request",
        "operationId" : "updateFormField",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FormFormfieldUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "formfield response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "form" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteFormField",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/visit/{parent-uuid}/attribute" : {
      "get" : {
        "tags" : [ "visit" ],
        "summary" : "Fetch all non-retired attribute subresources",
        "operationId" : "getAllVisitAttributes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/VisitAttributeGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "visit" ],
        "summary" : "Create attribute subresource with properties in request",
        "operationId" : "createVisitAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VisitAttributeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/visit/{parent-uuid}/attribute/{uuid}" : {
      "get" : {
        "tags" : [ "visit" ],
        "summary" : "Fetch attribute subresources by uuid",
        "operationId" : "getVisitAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/VisitAttributeGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "visit" ],
        "summary" : "edit attribute subresource with given uuid, only modifying properties in request",
        "operationId" : "updateVisitAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VisitAttributeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "visit" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteVisitAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/form/{parent-uuid}/resource" : {
      "get" : {
        "tags" : [ "form" ],
        "summary" : "Fetch all non-retired resource subresources",
        "operationId" : "getAllFormResources",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "resource response",
            "schema" : {
              "type" : "object",
              "properties" : {
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/FormResourceGet"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "form" ],
        "summary" : "Create resource subresource with properties in request",
        "operationId" : "createFormResource",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FormResourceCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "resource response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    },
    "/form/{parent-uuid}/resource/{uuid}" : {
      "get" : {
        "tags" : [ "form" ],
        "summary" : "Fetch resource subresources by uuid",
        "operationId" : "getFormResource",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "required" : false,
          "type" : "string",
          "enum" : [ "ref", "default", "full", "custom" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "resource response",
            "schema" : {
              "$ref" : "#/definitions/FormResourceGet"
            }
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "post" : {
        "tags" : [ "form" ],
        "summary" : "edit resource subresource with given uuid, only modifying properties in request",
        "operationId" : "updateFormResource",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resource",
          "description" : "Resource properties to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FormResourceUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "resource response"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      },
      "delete" : {
        "tags" : [ "form" ],
        "summary" : "Delete or purge resource by uuid",
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "operationId" : "deleteFormResource",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basic_auth" : {
      "type" : "basic"
    }
  },
  "definitions" : {
    "MetadatamappingMetadatasetGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "MetadatamappingMetadatasetGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "MetadatamappingMetadatasetGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "MetadatamappingMetadatasetCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "MetadatamappingMetadatasetCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "MetadatamappingMetadatasetUpdate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestDataSetDefinitionGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestDataSetDefinitionGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestDataSetDefinitionGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "ReportingrestDataSetDefinitionCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestDataSetDefinitionCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestDataSetDefinitionUpdate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "DrugGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "doseStrength" : {
          "type" : "number",
          "format" : "double"
        },
        "maximumDailyDose" : {
          "type" : "number",
          "format" : "double"
        },
        "minimumDailyDose" : {
          "type" : "number",
          "format" : "double"
        },
        "units" : {
          "type" : "string"
        },
        "combination" : {
          "type" : "boolean",
          "default" : false
        },
        "dosageForm" : {
          "$ref" : "#/definitions/ConceptGetRef"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGetRef"
        },
        "route" : {
          "$ref" : "#/definitions/ConceptGetRef"
        },
        "drugReferenceMaps" : {
          "$ref" : "#/definitions/DrugreferencemapGetRef"
        }
      }
    },
    "DrugGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "DrugGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "doseStrength" : {
          "type" : "number",
          "format" : "double"
        },
        "maximumDailyDose" : {
          "type" : "number",
          "format" : "double"
        },
        "minimumDailyDose" : {
          "type" : "number",
          "format" : "double"
        },
        "units" : {
          "type" : "string"
        },
        "combination" : {
          "type" : "boolean",
          "default" : false
        },
        "dosageForm" : {
          "$ref" : "#/definitions/ConceptGet"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGet"
        },
        "route" : {
          "$ref" : "#/definitions/ConceptGet"
        },
        "drugReferenceMaps" : {
          "$ref" : "#/definitions/DrugreferencemapGet"
        }
      }
    },
    "DrugCreate" : {
      "properties" : {
        "drugReferenceMaps" : {
          "$ref" : "#/definitions/DrugreferencemapCreate"
        }
      }
    },
    "DrugCreateFull" : {
      "properties" : {
        "drugReferenceMaps" : {
          "$ref" : "#/definitions/DrugreferencemapCreate"
        }
      }
    },
    "DrugUpdate" : {
      "properties" : {
        "drugReferenceMaps" : {
          "$ref" : "#/definitions/DrugreferencemapCreate"
        }
      }
    },
    "OrderfrequencyGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "OrderfrequencyGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "OrderfrequencyGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "OrderfrequencyCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "OrderfrequencyCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "OrderfrequencyUpdate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ConceptreferencetermGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "conceptSource" : {
          "$ref" : "#/definitions/ConceptsourceGetRef"
        }
      }
    },
    "ConceptreferencetermGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "ConceptreferencetermGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "code" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "conceptSource" : {
          "$ref" : "#/definitions/ConceptsourceGet"
        }
      }
    },
    "ConceptreferencetermCreate" : {
      "required" : [ "code", "conceptSource", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "conceptSource" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "ConceptreferencetermCreateFull" : {
      "required" : [ "code", "conceptSource", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "conceptSource" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "ConceptreferencetermUpdate" : { },
    "MetadatamappingTermmappingGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "MetadatamappingTermmappingGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "MetadatamappingTermmappingGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "MetadatamappingTermmappingCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "MetadatamappingTermmappingCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "MetadatamappingTermmappingUpdate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "OrdergroupCreate" : {
      "properties" : {
        "patient" : {
          "type" : "string",
          "example" : "uuid"
        },
        "encounter" : {
          "type" : "string",
          "example" : "uuid"
        },
        "orders" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderCreate"
          }
        },
        "orderSet" : {
          "type" : "string",
          "example" : "uuid"
        }
      }
    },
    "OrdergroupCreateFull" : {
      "properties" : {
        "patient" : {
          "type" : "string",
          "example" : "uuid"
        },
        "encounter" : {
          "type" : "string",
          "example" : "uuid"
        },
        "orders" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderCreate"
          }
        },
        "orderSet" : {
          "type" : "string",
          "example" : "uuid"
        }
      }
    },
    "OrdergroupGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        },
        "patient" : {
          "$ref" : "#/definitions/PatientGetRef"
        },
        "encounter" : {
          "$ref" : "#/definitions/EncounterGetRef"
        },
        "orders" : {
          "$ref" : "#/definitions/OrderGetRef"
        },
        "orderSet" : {
          "$ref" : "#/definitions/OrdersetGetRef"
        }
      }
    },
    "OrdergroupGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        }
      }
    },
    "OrdergroupGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "boolean"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        },
        "patient" : {
          "$ref" : "#/definitions/PatientGetRef"
        },
        "encounter" : {
          "$ref" : "#/definitions/EncounterGetRef"
        },
        "orders" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderGetRef"
          }
        },
        "orderSet" : {
          "$ref" : "#/definitions/OrdersetGetRef"
        }
      }
    },
    "OrdergroupUpdate" : {
      "properties" : {
        "orders" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderCreate"
          }
        }
      }
    },
    "ProgramattributetypeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        }
      }
    },
    "ProgramattributetypeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "ProgramattributetypeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "ProgramattributetypeCreate" : {
      "required" : [ "datatypeClassname", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "ProgramattributetypeCreateFull" : {
      "required" : [ "datatypeClassname", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "ProgramattributetypeUpdate" : {
      "required" : [ "datatypeClassname", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "AlertGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "alertId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "text" : {
          "type" : "string"
        },
        "satisfiedByAny" : {
          "type" : "boolean"
        },
        "alertRead" : {
          "type" : "boolean"
        },
        "dateToExpire" : {
          "type" : "string",
          "format" : "date"
        },
        "recipients" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AlertRecipientGetRef"
          }
        }
      }
    },
    "AlertGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "alertId" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "AlertGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "alertId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "text" : {
          "type" : "string"
        },
        "satisfiedByAny" : {
          "type" : "boolean"
        },
        "alertRead" : {
          "type" : "boolean"
        },
        "dateToExpire" : {
          "type" : "string",
          "format" : "date"
        },
        "creator" : {
          "type" : "object"
        },
        "dateCreated" : {
          "type" : "string",
          "format" : "date-time"
        },
        "changedBy" : {
          "type" : "object"
        },
        "dateChanged" : {
          "type" : "string",
          "format" : "date-time"
        },
        "recipients" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AlertRecipientGetRef"
          }
        }
      }
    },
    "AlertCreate" : {
      "properties" : {
        "text" : {
          "type" : "string"
        },
        "recipients" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AlertRecipientCreate"
          }
        },
        "satisfiedByAny" : {
          "type" : "boolean"
        },
        "dateToExpire" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "AlertCreateFull" : {
      "properties" : {
        "text" : {
          "type" : "string"
        },
        "recipients" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AlertRecipientCreate"
          }
        },
        "satisfiedByAny" : {
          "type" : "boolean"
        },
        "dateToExpire" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "AlertUpdate" : {
      "properties" : {
        "text" : {
          "type" : "string"
        },
        "recipients" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AlertRecipientCreate"
          }
        },
        "satisfiedByAny" : {
          "type" : "boolean"
        },
        "dateToExpire" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "FieldtypeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "isSet" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "FieldtypeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "FieldtypeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "isSet" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "FieldtypeCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "FieldtypeCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "FieldtypeUpdate" : { },
    "CohortmCohortmemberGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "CohortmCohortmemberGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "CohortmCohortmemberGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ConceptsourceGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "hl7Code" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "uniqueId" : {
          "type" : "string"
        }
      }
    },
    "ConceptsourceGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "hl7Code" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "ConceptsourceGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "hl7Code" : {
          "type" : "string"
        },
        "uniqueId" : {
          "type" : "string"
        }
      }
    },
    "ConceptsourceCreate" : {
      "required" : [ "description", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "hl7Code" : {
          "type" : "string"
        },
        "uniqueId" : {
          "type" : "string"
        }
      }
    },
    "ConceptsourceCreateFull" : {
      "required" : [ "description", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "hl7Code" : {
          "type" : "string"
        },
        "uniqueId" : {
          "type" : "string"
        }
      }
    },
    "ConceptsourceUpdate" : {
      "required" : [ "description", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "hl7Code" : {
          "type" : "string"
        },
        "uniqueId" : {
          "type" : "string"
        }
      }
    },
    "ProviderattributetypeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        }
      }
    },
    "ProviderattributetypeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "ProviderattributetypeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "ProviderattributetypeCreate" : {
      "required" : [ "datatypeClassname", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "ProviderattributetypeCreateFull" : {
      "required" : [ "datatypeClassname", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "ProviderattributetypeUpdate" : {
      "required" : [ "datatypeClassname", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "TaskdefinitionGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "TaskdefinitionGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "TaskdefinitionGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "TaskdefinitionCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "TaskdefinitionCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "TaskdefinitionUpdate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ServerlogGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ServerlogGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ServerlogGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "SystemsettingGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "property" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "SystemsettingGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "SystemsettingGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "property" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "SystemsettingCreate" : {
      "required" : [ "property" ],
      "properties" : {
        "property" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "SystemsettingCreateFull" : {
      "required" : [ "property" ],
      "properties" : {
        "property" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "SystemsettingUpdate" : {
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "ModuleGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "started" : {
          "type" : "boolean"
        },
        "startupErrorMessage" : {
          "type" : "string"
        }
      }
    },
    "ModuleGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "ModuleGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "started" : {
          "type" : "boolean"
        },
        "startupErrorMessage" : {
          "type" : "string"
        },
        "packageName" : {
          "type" : "string"
        },
        "author" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "requireOpenmrsVersion" : {
          "type" : "string"
        },
        "awareOfModules" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "requiredModules" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "PersonCreate" : {
      "required" : [ "gender", "names" ],
      "properties" : {
        "names" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PersonNameCreate"
          }
        },
        "gender" : {
          "type" : "string",
          "enum" : [ "M", "F" ]
        },
        "age" : {
          "type" : "integer",
          "format" : "int32"
        },
        "birthdate" : {
          "type" : "string",
          "format" : "date"
        },
        "birthdateEstimated" : {
          "type" : "boolean",
          "default" : false
        },
        "dead" : {
          "type" : "boolean",
          "default" : false
        },
        "deathDate" : {
          "type" : "string",
          "format" : "date"
        },
        "causeOfDeath" : {
          "type" : "string"
        },
        "addresses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PersonAddressCreate"
          }
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PersonAttributeCreate"
          }
        },
        "deathdateEstimated" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PersonCreateFull" : {
      "required" : [ "gender", "names" ],
      "properties" : {
        "names" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PersonNameCreate"
          }
        },
        "gender" : {
          "type" : "string",
          "enum" : [ "M", "F" ]
        },
        "age" : {
          "type" : "integer",
          "format" : "int32"
        },
        "birthdate" : {
          "type" : "string",
          "format" : "date"
        },
        "birthdateEstimated" : {
          "type" : "boolean",
          "default" : false
        },
        "dead" : {
          "type" : "boolean",
          "default" : false
        },
        "deathDate" : {
          "type" : "string",
          "format" : "date"
        },
        "causeOfDeath" : {
          "type" : "string"
        },
        "addresses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PersonAddressCreate"
          }
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PersonAttributeCreate"
          }
        },
        "deathdateEstimated" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PersonGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "gender" : {
          "type" : "string",
          "enum" : [ "M", "F" ]
        },
        "age" : {
          "type" : "integer",
          "format" : "int32"
        },
        "birthdate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "birthdateEstimated" : {
          "type" : "boolean"
        },
        "dead" : {
          "type" : "boolean"
        },
        "deathDate" : {
          "type" : "string",
          "format" : "date"
        },
        "causeOfDeath" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PersonAttributeGetRef"
          }
        },
        "voided" : {
          "type" : "boolean"
        },
        "preferredName" : {
          "$ref" : "#/definitions/PersonNameGetRef"
        },
        "preferredAddress" : {
          "$ref" : "#/definitions/PersonAddressGetRef"
        },
        "deathdateEstimated" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PersonGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "PersonGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "gender" : {
          "type" : "string",
          "enum" : [ "M", "F" ]
        },
        "age" : {
          "type" : "integer",
          "format" : "int32"
        },
        "birthdate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "birthdateEstimated" : {
          "type" : "boolean"
        },
        "dead" : {
          "type" : "boolean"
        },
        "deathDate" : {
          "type" : "string",
          "format" : "date"
        },
        "causeOfDeath" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PersonAttributeGetRef"
          }
        },
        "voided" : {
          "type" : "boolean"
        },
        "preferredName" : {
          "$ref" : "#/definitions/PersonNameGet"
        },
        "preferredAddress" : {
          "$ref" : "#/definitions/PersonAddressGet"
        },
        "names" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PersonNameGet"
          }
        },
        "addresses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PersonAddressGet"
          }
        },
        "deathdateEstimated" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PersonUpdate" : {
      "required" : [ "causeOfDeath", "dead" ],
      "properties" : {
        "dead" : {
          "type" : "boolean"
        },
        "causeOfDeath" : {
          "type" : "string"
        },
        "deathDate" : {
          "type" : "string",
          "format" : "date"
        },
        "age" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gender" : {
          "type" : "string",
          "enum" : [ "M", "F" ]
        },
        "birthdate" : {
          "type" : "string",
          "format" : "date"
        },
        "birthdateEstimated" : {
          "type" : "boolean",
          "default" : false
        },
        "preferredName" : {
          "type" : "string",
          "example" : "uuid"
        },
        "preferredAddress" : {
          "type" : "string",
          "example" : "uuid"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PersonAttributeCreate"
          }
        },
        "deathdateEstimated" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "CustomdatatypeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "handlers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomdatatypeHandlersGetRef"
          }
        }
      }
    },
    "CustomdatatypeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "CustomdatatypeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "handlers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomdatatypeHandlersGet"
          }
        }
      }
    },
    "PatientflagsPriorityGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "PatientflagsPriorityGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "PatientflagsPriorityGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "PatientflagsPriorityCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "PatientflagsPriorityCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "PatientflagsPriorityUpdate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ConceptdatatypeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "hl7Abbreviation" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "ConceptdatatypeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "ConceptdatatypeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "hl7Abbreviation" : {
          "type" : "string"
        }
      }
    },
    "ConditionCreate" : {
      "properties" : {
        "condition" : {
          "type" : "string"
        },
        "patient" : {
          "type" : "string",
          "example" : "uuid"
        },
        "clinicalStatus" : {
          "type" : "string"
        },
        "verificationStatus" : {
          "type" : "string"
        },
        "previousVersion" : {
          "type" : "string"
        },
        "onsetDate" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string"
        },
        "additionalDetail" : {
          "type" : "string"
        }
      }
    },
    "ConditionCreateFull" : {
      "properties" : {
        "condition" : {
          "type" : "string"
        },
        "patient" : {
          "type" : "string",
          "example" : "uuid"
        },
        "clinicalStatus" : {
          "type" : "string"
        },
        "verificationStatus" : {
          "type" : "string"
        },
        "previousVersion" : {
          "type" : "string"
        },
        "onsetDate" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string"
        },
        "additionalDetail" : {
          "type" : "string"
        }
      }
    },
    "ConditionGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "condition" : {
          "type" : "string"
        },
        "patient" : {
          "$ref" : "#/definitions/PatientGetRef"
        },
        "clinicalStatus" : {
          "type" : "string"
        },
        "verificationStatus" : {
          "type" : "string"
        },
        "previousVersion" : {
          "type" : "string"
        },
        "onsetDate" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string"
        },
        "additionalDetail" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        }
      }
    },
    "ConditionGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ConditionGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "condition" : {
          "type" : "string"
        },
        "patient" : {
          "$ref" : "#/definitions/PatientGetRef"
        },
        "clinicalStatus" : {
          "type" : "string"
        },
        "verificationStatus" : {
          "type" : "string"
        },
        "previousVersion" : {
          "type" : "string"
        },
        "onsetDate" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string"
        },
        "additionalDetail" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        }
      }
    },
    "ConditionUpdate" : {
      "properties" : {
        "condition" : {
          "type" : "string"
        },
        "clinicalStatus" : {
          "type" : "string"
        },
        "verificationStatus" : {
          "type" : "string"
        },
        "previousVersion" : {
          "type" : "string"
        },
        "onsetDate" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string"
        },
        "additionalDetail" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        }
      }
    },
    "DrugreferencemapCreate" : {
      "properties" : {
        "conceptReferenceTerm" : {
          "type" : "string",
          "example" : "uuid"
        },
        "conceptMapType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "drug" : {
          "type" : "string",
          "example" : "uuid"
        }
      }
    },
    "DrugreferencemapCreateFull" : {
      "properties" : {
        "conceptReferenceTerm" : {
          "type" : "string",
          "example" : "uuid"
        },
        "conceptMapType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "drug" : {
          "type" : "string",
          "example" : "uuid"
        }
      }
    },
    "DrugreferencemapGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "drug" : {
          "$ref" : "#/definitions/DrugGetRef"
        },
        "conceptReferenceTerm" : {
          "$ref" : "#/definitions/ConceptreferencetermGetRef"
        },
        "conceptMapType" : {
          "$ref" : "#/definitions/ConceptmaptypeGetRef"
        }
      }
    },
    "DrugreferencemapGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "DrugreferencemapGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "drug" : {
          "$ref" : "#/definitions/DrugGet"
        },
        "conceptReferenceTerm" : {
          "$ref" : "#/definitions/ConceptreferencetermGet"
        },
        "conceptMapType" : {
          "$ref" : "#/definitions/ConceptmaptypeGet"
        }
      }
    },
    "DrugreferencemapUpdate" : {
      "properties" : {
        "conceptReferenceTerm" : {
          "type" : "string",
          "example" : "uuid"
        },
        "conceptMapType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "drug" : {
          "type" : "string",
          "example" : "uuid"
        }
      }
    },
    "LocationGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "address1" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "cityVillage" : {
          "type" : "string"
        },
        "stateProvince" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "latitude" : {
          "type" : "string"
        },
        "longitude" : {
          "type" : "string"
        },
        "countyDistrict" : {
          "type" : "string"
        },
        "address3" : {
          "type" : "string"
        },
        "address4" : {
          "type" : "string"
        },
        "address5" : {
          "type" : "string"
        },
        "address6" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocationtagGetRef"
          }
        },
        "parentLocation" : {
          "$ref" : "#/definitions/LocationGetRef"
        },
        "childLocations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocationGetRef"
          }
        }
      }
    },
    "LocationGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "LocationGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "address1" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "cityVillage" : {
          "type" : "string"
        },
        "stateProvince" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "latitude" : {
          "type" : "string"
        },
        "longitude" : {
          "type" : "string"
        },
        "countyDistrict" : {
          "type" : "string"
        },
        "address3" : {
          "type" : "string"
        },
        "address4" : {
          "type" : "string"
        },
        "address5" : {
          "type" : "string"
        },
        "address6" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocationtagGet"
          }
        },
        "parentLocation" : {
          "$ref" : "#/definitions/LocationGet"
        },
        "childLocations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocationGet"
          }
        }
      }
    },
    "LocationCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "address1" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "cityVillage" : {
          "type" : "string"
        },
        "stateProvince" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "latitude" : {
          "type" : "string"
        },
        "longitude" : {
          "type" : "string"
        },
        "countyDistrict" : {
          "type" : "string"
        },
        "address3" : {
          "type" : "string"
        },
        "address4" : {
          "type" : "string"
        },
        "address5" : {
          "type" : "string"
        },
        "address6" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "parentLocation" : {
          "type" : "string"
        },
        "childLocations" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "LocationCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "address1" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "cityVillage" : {
          "type" : "string"
        },
        "stateProvince" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "latitude" : {
          "type" : "string"
        },
        "longitude" : {
          "type" : "string"
        },
        "countyDistrict" : {
          "type" : "string"
        },
        "address3" : {
          "type" : "string"
        },
        "address4" : {
          "type" : "string"
        },
        "address5" : {
          "type" : "string"
        },
        "address6" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "parentLocation" : {
          "type" : "string"
        },
        "childLocations" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "LocationUpdate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "address1" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "cityVillage" : {
          "type" : "string"
        },
        "stateProvince" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "latitude" : {
          "type" : "string"
        },
        "longitude" : {
          "type" : "string"
        },
        "countyDistrict" : {
          "type" : "string"
        },
        "address3" : {
          "type" : "string"
        },
        "address4" : {
          "type" : "string"
        },
        "address5" : {
          "type" : "string"
        },
        "address6" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "parentLocation" : {
          "type" : "string"
        },
        "childLocations" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "PrivilegeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "PrivilegeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "PrivilegeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "PrivilegeCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "PrivilegeCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "PrivilegeUpdate" : {
      "properties" : {
        "description" : {
          "type" : "string"
        }
      }
    },
    "DatabasechangeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "author" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "runStatus" : {
          "type" : "string",
          "enum" : [ "NOT_RAN", "ALREADY_RAN", "RUN_AGAIN", "MARK_RAN", "INVALID_MD5SUM" ]
        }
      }
    },
    "DatabasechangeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "DatabasechangeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "author" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "runStatus" : {
          "type" : "string",
          "enum" : [ "NOT_RAN", "ALREADY_RAN", "RUN_AGAIN", "MARK_RAN", "INVALID_MD5SUM" ]
        },
        "comments" : {
          "type" : "string"
        },
        "ranDate" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "PersonattributetypeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "format" : {
          "type" : "string"
        },
        "foreignKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sortWeight" : {
          "type" : "number",
          "format" : "double"
        },
        "searchable" : {
          "type" : "boolean",
          "default" : false
        },
        "editPrivilege" : {
          "$ref" : "#/definitions/PrivilegeGetRef"
        }
      }
    },
    "PersonattributetypeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "PersonattributetypeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "format" : {
          "type" : "string"
        },
        "foreignKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sortWeight" : {
          "type" : "number",
          "format" : "double"
        },
        "searchable" : {
          "type" : "boolean",
          "default" : false
        },
        "editPrivilege" : {
          "$ref" : "#/definitions/PrivilegeGet"
        },
        "concept" : {
          "type" : "string"
        }
      }
    },
    "PersonattributetypeCreate" : {
      "required" : [ "description", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "format" : {
          "type" : "string",
          "example" : "java.lang.String"
        },
        "foreignKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sortWeight" : {
          "type" : "number",
          "format" : "double"
        },
        "searchable" : {
          "type" : "boolean",
          "default" : false
        },
        "editPrivilege" : {
          "$ref" : "#/definitions/PrivilegeCreate"
        }
      }
    },
    "PersonattributetypeCreateFull" : {
      "required" : [ "description", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "format" : {
          "type" : "string",
          "example" : "java.lang.String"
        },
        "foreignKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sortWeight" : {
          "type" : "number",
          "format" : "double"
        },
        "searchable" : {
          "type" : "boolean",
          "default" : false
        },
        "editPrivilege" : {
          "$ref" : "#/definitions/PrivilegeCreate"
        }
      }
    },
    "PersonattributetypeUpdate" : {
      "required" : [ "description", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "format" : {
          "type" : "string",
          "example" : "java.lang.String"
        },
        "foreignKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sortWeight" : {
          "type" : "number",
          "format" : "double"
        },
        "searchable" : {
          "type" : "boolean",
          "default" : false
        },
        "editPrivilege" : {
          "$ref" : "#/definitions/PrivilegeCreate"
        }
      }
    },
    "OrdertypeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "javaClassName" : {
          "type" : "string"
        },
        "conceptClasses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConceptclassGetRef"
          }
        },
        "parent" : {
          "$ref" : "#/definitions/OrdertypeGetRef"
        }
      }
    },
    "OrdertypeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "OrdertypeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "javaClassName" : {
          "type" : "string"
        },
        "conceptClasses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConceptclassGet"
          }
        },
        "parent" : {
          "$ref" : "#/definitions/OrdertypeGet"
        }
      }
    },
    "OrdertypeCreate" : {
      "required" : [ "javaClassName", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "javaClassName" : {
          "type" : "string"
        },
        "parent" : {
          "type" : "string",
          "example" : "uuid"
        },
        "conceptClasses" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "uuid"
          }
        }
      }
    },
    "OrdertypeCreateFull" : {
      "required" : [ "javaClassName", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "javaClassName" : {
          "type" : "string"
        },
        "parent" : {
          "type" : "string",
          "example" : "uuid"
        },
        "conceptClasses" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "uuid"
          }
        }
      }
    },
    "OrdertypeUpdate" : {
      "required" : [ "javaClassName", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "javaClassName" : {
          "type" : "string"
        },
        "parent" : {
          "type" : "string",
          "example" : "uuid"
        },
        "conceptClasses" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "uuid"
          }
        }
      }
    },
    "FieldGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "tableName" : {
          "type" : "string"
        },
        "attributeName" : {
          "type" : "string"
        },
        "defaultValue" : {
          "type" : "string"
        },
        "selectMultiple" : {
          "type" : "boolean",
          "default" : false
        },
        "fieldType" : {
          "$ref" : "#/definitions/FieldtypeGetRef"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGetRef"
        }
      }
    },
    "FieldGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "FieldGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "tableName" : {
          "type" : "string"
        },
        "attributeName" : {
          "type" : "string"
        },
        "defaultValue" : {
          "type" : "string"
        },
        "selectMultiple" : {
          "type" : "boolean",
          "default" : false
        },
        "fieldType" : {
          "$ref" : "#/definitions/FieldtypeGet"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGet"
        }
      }
    },
    "FieldCreate" : {
      "required" : [ "fieldType", "name", "selectMultiple" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "fieldType" : {
          "$ref" : "#/definitions/FieldtypeCreate"
        },
        "selectMultiple" : {
          "type" : "boolean",
          "default" : false
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptCreate"
        },
        "tableName" : {
          "type" : "string"
        },
        "attributeName" : {
          "type" : "string"
        },
        "defaultValue" : {
          "type" : "string"
        }
      }
    },
    "FieldCreateFull" : {
      "required" : [ "fieldType", "name", "selectMultiple" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "fieldType" : {
          "$ref" : "#/definitions/FieldtypeCreate"
        },
        "selectMultiple" : {
          "type" : "boolean",
          "default" : false
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptCreate"
        },
        "tableName" : {
          "type" : "string"
        },
        "attributeName" : {
          "type" : "string"
        },
        "defaultValue" : {
          "type" : "string"
        }
      }
    },
    "FieldUpdate" : { },
    "ConceptproposalGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ConceptproposalGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ConceptproposalGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "CohortmCohortGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "CohortmCohortGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "CohortmCohortGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "OrdersetGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "operator" : {
          "type" : "string",
          "enum" : [ "ALL", "ONE", "ANY" ]
        },
        "orderSetMembers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrdersetOrdersetmemberGetRef"
          }
        }
      }
    },
    "OrdersetGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "OrdersetGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "operator" : {
          "type" : "string",
          "enum" : [ "ALL", "ONE", "ANY" ]
        },
        "orderSetMembers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrdersetOrdersetmemberGet"
          }
        }
      }
    },
    "OrdersetCreate" : {
      "properties" : {
        "operator" : {
          "type" : "string",
          "enum" : [ "ALL", "ONE", "ANY" ]
        },
        "orderSetMembers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrdersetOrdersetmemberCreate"
          }
        }
      }
    },
    "OrdersetCreateFull" : {
      "properties" : {
        "operator" : {
          "type" : "string",
          "enum" : [ "ALL", "ONE", "ANY" ]
        },
        "orderSetMembers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrdersetOrdersetmemberCreate"
          }
        }
      }
    },
    "OrdersetUpdate" : {
      "properties" : {
        "operator" : {
          "type" : "string",
          "enum" : [ "ALL", "ONE", "ANY" ]
        },
        "orderSetMembers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrdersetOrdersetmemberCreate"
          }
        }
      }
    },
    "OrderCreate" : {
      "required" : [ "concept", "orderType", "patient" ],
      "properties" : {
        "encounter" : {
          "type" : "string",
          "example" : "uuid"
        },
        "orderType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "NEW", "REVISE", "DISCONTINUE", "RENEW" ]
        },
        "accessionNumber" : {
          "type" : "string"
        },
        "dateActivated" : {
          "type" : "string",
          "format" : "date"
        },
        "scheduledDate" : {
          "type" : "string",
          "format" : "date"
        },
        "patient" : {
          "type" : "string",
          "example" : "uuid"
        },
        "concept" : {
          "type" : "string",
          "example" : "uuid"
        },
        "careSetting" : {
          "type" : "string",
          "example" : "uuid"
        },
        "dateStopped" : {
          "type" : "string",
          "format" : "date"
        },
        "autoExpireDate" : {
          "type" : "string",
          "format" : "date"
        },
        "orderer" : {
          "type" : "string",
          "example" : "uuid"
        },
        "previousOrder" : {
          "type" : "string",
          "example" : "uuid"
        },
        "urgency" : {
          "type" : "string",
          "enum" : [ "ROUTINE", "STAT", "ON_SCHEDULED_DATE" ]
        },
        "orderReason" : {
          "type" : "string",
          "example" : "uuid"
        },
        "orderReasonNonCoded" : {
          "type" : "string"
        },
        "instructions" : {
          "type" : "string"
        },
        "commentToFulfiller" : {
          "type" : "string"
        }
      }
    },
    "OrderCreateFull" : {
      "required" : [ "concept", "orderType", "patient" ],
      "properties" : {
        "encounter" : {
          "$ref" : "#/definitions/EncounterCreate"
        },
        "orderType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "NEW", "REVISE", "DISCONTINUE", "RENEW" ]
        },
        "accessionNumber" : {
          "type" : "string"
        },
        "dateActivated" : {
          "type" : "string",
          "format" : "date"
        },
        "scheduledDate" : {
          "type" : "string",
          "format" : "date"
        },
        "patient" : {
          "$ref" : "#/definitions/PatientCreate"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptCreate"
        },
        "careSetting" : {
          "type" : "string",
          "example" : "uuid"
        },
        "dateStopped" : {
          "type" : "string",
          "format" : "date"
        },
        "autoExpireDate" : {
          "type" : "string",
          "format" : "date"
        },
        "orderer" : {
          "$ref" : "#/definitions/UserCreate"
        },
        "previousOrder" : {
          "$ref" : "#/definitions/OrderCreate"
        },
        "urgency" : {
          "type" : "string",
          "enum" : [ "ROUTINE", "STAT", "ON_SCHEDULED_DATE" ]
        },
        "orderReason" : {
          "$ref" : "#/definitions/ConceptCreate"
        },
        "orderReasonNonCoded" : {
          "type" : "string"
        },
        "instructions" : {
          "type" : "string"
        },
        "commentToFulfiller" : {
          "type" : "string"
        }
      }
    },
    "OrderGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "instructions" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "autoExpireDate" : {
          "type" : "string",
          "format" : "date"
        },
        "accessionNumber" : {
          "type" : "string"
        },
        "discontinuedDate" : {
          "type" : "string",
          "format" : "date"
        },
        "discontinuedReasonNonCoded" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        },
        "orderType" : {
          "$ref" : "#/definitions/OrdertypeGetRef"
        },
        "patient" : {
          "$ref" : "#/definitions/PatientGetRef"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGetRef"
        },
        "encounter" : {
          "$ref" : "#/definitions/EncounterGetRef"
        },
        "orderer" : {
          "$ref" : "#/definitions/UserGetRef"
        },
        "discontinuedBy" : {
          "$ref" : "#/definitions/UserGetRef"
        },
        "discontinuedReason" : {
          "$ref" : "#/definitions/ConceptGetRef"
        }
      }
    },
    "OrderGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "OrderGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "instructions" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "autoExpireDate" : {
          "type" : "string",
          "format" : "date"
        },
        "accessionNumber" : {
          "type" : "string"
        },
        "discontinuedDate" : {
          "type" : "string",
          "format" : "date"
        },
        "discontinuedReasonNonCoded" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        },
        "orderType" : {
          "$ref" : "#/definitions/OrdertypeGet"
        },
        "patient" : {
          "$ref" : "#/definitions/PatientGet"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGet"
        },
        "encounter" : {
          "$ref" : "#/definitions/EncounterGet"
        },
        "orderer" : {
          "$ref" : "#/definitions/UserGet"
        },
        "discontinuedBy" : {
          "$ref" : "#/definitions/UserGet"
        },
        "discontinuedReason" : {
          "$ref" : "#/definitions/ConceptGet"
        }
      }
    },
    "AdministrationlinksGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "title" : {
          "type" : "string"
        },
        "administrationLinks" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "AdministrationlinksGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "AdministrationlinksGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "title" : {
          "type" : "string"
        },
        "administrationLinks" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "ConceptattributetypeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        }
      }
    },
    "ConceptattributetypeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "ConceptattributetypeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "ConceptattributetypeCreate" : {
      "required" : [ "datatypeClassname", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "ConceptattributetypeCreateFull" : {
      "required" : [ "datatypeClassname", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "ConceptattributetypeUpdate" : {
      "required" : [ "datatypeClassname", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "FormGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "build" : {
          "type" : "integer",
          "format" : "int32"
        },
        "published" : {
          "type" : "boolean",
          "default" : false
        },
        "retired" : {
          "type" : "boolean"
        },
        "encounterType" : {
          "$ref" : "#/definitions/EncountertypeGetRef"
        },
        "formFields" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FormFormfieldGetRef"
          }
        }
      }
    },
    "FormGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "FormGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "version" : {
          "type" : "string"
        },
        "build" : {
          "type" : "integer",
          "format" : "int32"
        },
        "published" : {
          "type" : "boolean",
          "default" : false
        },
        "encounterType" : {
          "$ref" : "#/definitions/EncountertypeGet"
        },
        "formFields" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FormFormfieldGet"
          }
        }
      }
    },
    "FormCreate" : {
      "required" : [ "name", "version" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "encounterType" : {
          "type" : "string"
        },
        "build" : {
          "type" : "integer",
          "format" : "int32"
        },
        "published" : {
          "type" : "boolean",
          "default" : false
        },
        "formFields" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "xslt" : {
          "type" : "string"
        },
        "template" : {
          "type" : "string"
        }
      }
    },
    "FormCreateFull" : {
      "required" : [ "name", "version" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "encounterType" : {
          "$ref" : "#/definitions/EncountertypeCreate"
        },
        "build" : {
          "type" : "integer",
          "format" : "int32"
        },
        "published" : {
          "type" : "boolean",
          "default" : false
        },
        "formFields" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FormFormfieldCreate"
          }
        },
        "xslt" : {
          "type" : "string"
        },
        "template" : {
          "type" : "string"
        }
      }
    },
    "FormUpdate" : {
      "required" : [ "name", "version" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "encounterType" : {
          "type" : "string"
        },
        "build" : {
          "type" : "integer",
          "format" : "int32"
        },
        "published" : {
          "type" : "boolean",
          "default" : false
        },
        "formFields" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "xslt" : {
          "type" : "string"
        },
        "template" : {
          "type" : "string"
        }
      }
    },
    "CaresettingGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "careSettingType" : {
          "type" : "string",
          "enum" : [ "OUTPATIENT", "INPATIENT" ]
        }
      }
    },
    "CaresettingGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "CaresettingGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "careSettingType" : {
          "type" : "string",
          "enum" : [ "OUTPATIENT", "INPATIENT" ]
        }
      }
    },
    "PatientidentifiertypeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "format" : {
          "type" : "string"
        },
        "formatDescription" : {
          "type" : "string"
        },
        "required" : {
          "type" : "boolean"
        },
        "checkDigit" : {
          "type" : "boolean"
        },
        "validator" : {
          "type" : "string"
        },
        "locationBehavior" : {
          "type" : "string",
          "enum" : [ "REQUIRED", "NOT_USED" ]
        },
        "uniquenessBehavior" : {
          "type" : "string"
        }
      }
    },
    "PatientidentifiertypeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "PatientidentifiertypeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "format" : {
          "type" : "string"
        },
        "formatDescription" : {
          "type" : "string"
        },
        "required" : {
          "type" : "boolean"
        },
        "checkDigit" : {
          "type" : "boolean"
        },
        "validator" : {
          "type" : "string"
        },
        "locationBehavior" : {
          "type" : "string",
          "enum" : [ "REQUIRED", "NOT_USED" ]
        },
        "uniquenessBehavior" : {
          "type" : "string"
        }
      }
    },
    "PatientidentifiertypeCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "format" : {
          "type" : "string"
        },
        "formatDescription" : {
          "type" : "string"
        },
        "required" : {
          "type" : "boolean"
        },
        "checkDigit" : {
          "type" : "boolean"
        },
        "validator" : {
          "type" : "string"
        },
        "locationBehavior" : {
          "type" : "string",
          "enum" : [ "REQUIRED", "NOT_USED" ]
        },
        "uniquenessBehavior" : {
          "type" : "string"
        }
      }
    },
    "PatientidentifiertypeCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "format" : {
          "type" : "string"
        },
        "formatDescription" : {
          "type" : "string"
        },
        "required" : {
          "type" : "boolean"
        },
        "checkDigit" : {
          "type" : "boolean"
        },
        "validator" : {
          "type" : "string"
        },
        "locationBehavior" : {
          "type" : "string",
          "enum" : [ "REQUIRED", "NOT_USED" ]
        },
        "uniquenessBehavior" : {
          "type" : "string"
        }
      }
    },
    "PatientidentifiertypeUpdate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "format" : {
          "type" : "string"
        },
        "formatDescription" : {
          "type" : "string"
        },
        "required" : {
          "type" : "boolean"
        },
        "checkDigit" : {
          "type" : "boolean"
        },
        "validator" : {
          "type" : "string"
        },
        "locationBehavior" : {
          "type" : "string",
          "enum" : [ "REQUIRED", "NOT_USED" ]
        },
        "uniquenessBehavior" : {
          "type" : "string"
        }
      }
    },
    "VisittypeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "VisittypeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "VisittypeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "VisittypeCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "VisittypeCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "VisittypeUpdate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "PatientflagsFlagGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "PatientflagsFlagGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "PatientflagsFlagGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "PatientflagsFlagCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "PatientflagsFlagCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "PatientflagsFlagUpdate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "LocationtagGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "LocationtagGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "LocationtagGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "LocationtagCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "retiredReason" : {
          "type" : "string"
        }
      }
    },
    "LocationtagCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "retiredReason" : {
          "type" : "string"
        }
      }
    },
    "LocationtagUpdate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "retiredReason" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestDataSetCreate" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "metadata" : {
          "type" : "string"
        },
        "rows" : {
          "type" : "string"
        },
        "definition" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestDataSetCreateFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "metadata" : {
          "type" : "string"
        },
        "rows" : {
          "type" : "string"
        },
        "definition" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestDataSetGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "metadata" : {
          "type" : "string"
        },
        "rows" : {
          "type" : "string"
        },
        "definition" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestDataSetGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ReportingrestDataSetGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ReportingrestDataSetUpdate" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "metadata" : {
          "type" : "string"
        },
        "rows" : {
          "type" : "string"
        },
        "definition" : {
          "type" : "string"
        }
      }
    },
    "RelationshiptypeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "aIsToB" : {
          "type" : "string"
        },
        "bIsToA" : {
          "type" : "string"
        }
      }
    },
    "RelationshiptypeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "RelationshiptypeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "aIsToB" : {
          "type" : "string"
        },
        "bIsToA" : {
          "type" : "string"
        },
        "weight" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "RelationshiptypeCreate" : {
      "required" : [ "aIsToB", "bIsToA", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "aIsToB" : {
          "type" : "string"
        },
        "bIsToA" : {
          "type" : "string"
        },
        "weight" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "RelationshiptypeCreateFull" : {
      "required" : [ "aIsToB", "bIsToA", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "aIsToB" : {
          "type" : "string"
        },
        "bIsToA" : {
          "type" : "string"
        },
        "weight" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "RelationshiptypeUpdate" : { },
    "OpenconceptlabSubscriptionGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "OpenconceptlabSubscriptionGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "OpenconceptlabSubscriptionGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ProgramGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGetRef"
        },
        "allWorkflows" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkflowGetRef"
          }
        }
      }
    },
    "ProgramGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "allWorkflows" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkflowGetRef"
          }
        }
      }
    },
    "ProgramGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGet"
        },
        "allWorkflows" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkflowGet"
          }
        }
      }
    },
    "ProgramCreate" : {
      "required" : [ "concept", "description", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "concept" : {
          "type" : "string",
          "example" : "uuid"
        },
        "retired" : {
          "type" : "boolean"
        },
        "outcomesConcept" : {
          "type" : "string",
          "example" : "uuid"
        }
      }
    },
    "ProgramCreateFull" : {
      "required" : [ "concept", "description", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptCreate"
        },
        "retired" : {
          "type" : "boolean"
        },
        "outcomesConcept" : {
          "$ref" : "#/definitions/ConceptCreate"
        }
      }
    },
    "ProgramUpdate" : { },
    "ReportingrestCohortDefinitionGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestCohortDefinitionGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestCohortDefinitionGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "ReportingrestCohortDefinitionCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestCohortDefinitionCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestCohortDefinitionUpdate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ConceptstopwordGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string",
          "example" : "en"
        }
      }
    },
    "ConceptstopwordGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "ConceptstopwordGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string",
          "example" : "en"
        }
      }
    },
    "ConceptstopwordCreate" : {
      "required" : [ "value" ],
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string",
          "example" : "en"
        }
      }
    },
    "ConceptstopwordCreateFull" : {
      "required" : [ "value" ],
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string",
          "example" : "en"
        }
      }
    },
    "ConceptstopwordUpdate" : {
      "required" : [ "value" ],
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string",
          "example" : "en"
        }
      }
    },
    "ReportingrestReportRequestCreate" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "status" : {
          "type" : "string"
        },
        "reportDefinition" : {
          "type" : "string"
        },
        "baseCohort" : {
          "type" : "string"
        },
        "renderingMode" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "string"
        },
        "schedule" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestReportRequestCreateFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "status" : {
          "type" : "string"
        },
        "reportDefinition" : {
          "type" : "string"
        },
        "baseCohort" : {
          "type" : "string"
        },
        "renderingMode" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "string"
        },
        "schedule" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestReportRequestGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "renderingMode" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "string"
        },
        "schedule" : {
          "type" : "string"
        },
        "requestedBy" : {
          "type" : "string"
        },
        "requestDate" : {
          "type" : "string",
          "format" : "date"
        },
        "status" : {
          "type" : "string"
        },
        "evaluateStartDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "evaluateCompleteDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "renderCompleteDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestReportRequestGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ReportingrestReportRequestGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "renderingMode" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "string"
        },
        "schedule" : {
          "type" : "string"
        },
        "requestedBy" : {
          "type" : "string"
        },
        "requestDate" : {
          "type" : "string",
          "format" : "date"
        },
        "status" : {
          "type" : "string"
        },
        "evaluateStartDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "evaluateCompleteDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "renderCompleteDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestReportRequestUpdate" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "status" : {
          "type" : "string"
        },
        "reportDefinition" : {
          "type" : "string"
        },
        "baseCohort" : {
          "type" : "string"
        },
        "renderingMode" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "string"
        },
        "schedule" : {
          "type" : "string"
        }
      }
    },
    "Queue-room-providerGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "Queue-room-providerGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "Queue-room-providerGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "PatientdiagnosesCreate" : {
      "properties" : {
        "diagnosis" : {
          "type" : "string"
        },
        "encounter" : {
          "type" : "string"
        },
        "condition" : {
          "type" : "string"
        },
        "certainty" : {
          "type" : "string"
        },
        "patient" : {
          "type" : "string",
          "example" : "uuid"
        },
        "rank" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PatientdiagnosesCreateFull" : {
      "properties" : {
        "diagnosis" : {
          "type" : "string"
        },
        "encounter" : {
          "type" : "string"
        },
        "condition" : {
          "type" : "string"
        },
        "certainty" : {
          "type" : "string"
        },
        "patient" : {
          "type" : "string",
          "example" : "uuid"
        },
        "rank" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PatientdiagnosesGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "diagnosis" : {
          "type" : "string"
        },
        "condition" : {
          "type" : "string"
        },
        "certainty" : {
          "type" : "string",
          "enum" : [ "PROVISIONAL", "CONFIRMED" ]
        },
        "rank" : {
          "type" : "integer",
          "format" : "int32"
        },
        "patient" : {
          "$ref" : "#/definitions/PatientGetRef"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "PatientdiagnosesGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "PatientdiagnosesGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "diagnosis" : {
          "type" : "string"
        },
        "condition" : {
          "type" : "string"
        },
        "certainty" : {
          "type" : "string",
          "enum" : [ "PROVISIONAL", "CONFIRMED" ]
        },
        "rank" : {
          "type" : "integer",
          "format" : "int32"
        },
        "patient" : {
          "$ref" : "#/definitions/PatientGetRef"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "PatientdiagnosesUpdate" : {
      "properties" : {
        "diagnosis" : {
          "type" : "string"
        },
        "condition" : {
          "type" : "string"
        },
        "encounter" : {
          "type" : "string"
        },
        "certainty" : {
          "type" : "string",
          "enum" : [ "PROVISIONAL", "CONFIRMED" ]
        },
        "rank" : {
          "type" : "integer",
          "format" : "int32"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "PatientflagsTagGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "PatientflagsTagGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "PatientflagsTagGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "PatientflagsTagCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "PatientflagsTagCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "PatientflagsTagUpdate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "EncounterCreate" : {
      "required" : [ "encounterType", "patient" ],
      "properties" : {
        "patient" : {
          "$ref" : "#/definitions/PatientCreate"
        },
        "encounterType" : {
          "$ref" : "#/definitions/EncountertypeCreate"
        },
        "encounterDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "location" : {
          "$ref" : "#/definitions/LocationCreate"
        },
        "form" : {
          "$ref" : "#/definitions/FormCreate"
        },
        "provider" : {
          "type" : "string"
        },
        "orders" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderCreate"
          }
        },
        "obs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ObsCreate"
          }
        }
      }
    },
    "EncounterCreateFull" : {
      "required" : [ "encounterType", "patient" ],
      "properties" : {
        "patient" : {
          "$ref" : "#/definitions/PatientCreate"
        },
        "encounterType" : {
          "$ref" : "#/definitions/EncountertypeCreate"
        },
        "encounterDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "location" : {
          "$ref" : "#/definitions/LocationCreate"
        },
        "form" : {
          "$ref" : "#/definitions/FormCreate"
        },
        "provider" : {
          "type" : "string"
        },
        "orders" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderCreate"
          }
        },
        "obs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ObsCreate"
          }
        }
      }
    },
    "EncounterGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "encounterDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "provider" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        },
        "patient" : {
          "$ref" : "#/definitions/PatientGetRef"
        },
        "location" : {
          "$ref" : "#/definitions/LocationGetRef"
        },
        "form" : {
          "$ref" : "#/definitions/FormGetRef"
        },
        "encounterType" : {
          "$ref" : "#/definitions/EncountertypeGetRef"
        },
        "obs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ObsGetRef"
          }
        },
        "orders" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderGetRef"
          }
        }
      }
    },
    "EncounterGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "EncounterGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "encounterDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "provider" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        },
        "patient" : {
          "$ref" : "#/definitions/PatientGet"
        },
        "location" : {
          "$ref" : "#/definitions/LocationGet"
        },
        "form" : {
          "$ref" : "#/definitions/FormGet"
        },
        "encounterType" : {
          "$ref" : "#/definitions/EncountertypeGet"
        },
        "obs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ObsGet"
          }
        },
        "orders" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderGet"
          }
        }
      }
    },
    "EncounterUpdate" : {
      "required" : [ "encounterType", "patient" ],
      "properties" : {
        "patient" : {
          "$ref" : "#/definitions/PatientCreate"
        },
        "encounterType" : {
          "$ref" : "#/definitions/EncountertypeCreate"
        },
        "encounterDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "location" : {
          "$ref" : "#/definitions/LocationCreate"
        },
        "form" : {
          "$ref" : "#/definitions/FormCreate"
        },
        "provider" : {
          "type" : "string"
        },
        "orders" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderCreate"
          }
        },
        "obs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ObsCreate"
          }
        }
      }
    },
    "VisitGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "startDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "stopDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "voided" : {
          "type" : "boolean"
        },
        "patient" : {
          "$ref" : "#/definitions/PatientGetRef"
        },
        "visitType" : {
          "$ref" : "#/definitions/VisittypeGetRef"
        },
        "indication" : {
          "$ref" : "#/definitions/ConceptGetRef"
        },
        "location" : {
          "$ref" : "#/definitions/LocationGetRef"
        },
        "encounters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EncounterGetRef"
          }
        }
      }
    },
    "VisitGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "VisitGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "startDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "stopDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "voided" : {
          "type" : "boolean"
        },
        "patient" : {
          "$ref" : "#/definitions/PatientGet"
        },
        "visitType" : {
          "$ref" : "#/definitions/VisittypeGet"
        },
        "indication" : {
          "$ref" : "#/definitions/ConceptGet"
        },
        "location" : {
          "$ref" : "#/definitions/LocationGet"
        },
        "encounters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EncounterGet"
          }
        }
      }
    },
    "VisitCreate" : {
      "required" : [ "patient", "visitType" ],
      "properties" : {
        "patient" : {
          "type" : "string",
          "example" : "uuid"
        },
        "visitType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "startDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "location" : {
          "type" : "string",
          "example" : "uuid"
        },
        "indication" : {
          "type" : "string"
        },
        "stopDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "encounters" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "uuid"
          }
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VisitAttributeCreate"
          }
        }
      }
    },
    "VisitCreateFull" : {
      "required" : [ "patient", "visitType" ],
      "properties" : {
        "patient" : {
          "$ref" : "#/definitions/PatientCreate"
        },
        "visitType" : {
          "$ref" : "#/definitions/VisittypeCreate"
        },
        "startDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "location" : {
          "$ref" : "#/definitions/LocationCreate"
        },
        "indication" : {
          "$ref" : "#/definitions/ConceptCreate"
        },
        "stopDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "encounters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EncounterCreate"
          }
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VisitAttributeCreate"
          }
        }
      }
    },
    "VisitUpdate" : {
      "properties" : {
        "visitType" : {
          "$ref" : "#/definitions/VisittypeCreate"
        },
        "startDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "location" : {
          "$ref" : "#/definitions/LocationCreate"
        },
        "indication" : {
          "$ref" : "#/definitions/ConceptCreate"
        },
        "stopDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "encounters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EncounterCreate"
          }
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "IdgenAutogenerationoptionGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "identifierType" : {
          "$ref" : "#/definitions/PatientidentifiertypeGet"
        },
        "location" : {
          "$ref" : "#/definitions/LocationGet"
        },
        "source" : {
          "$ref" : "#/definitions/IdgenIdentifiersourceGet"
        },
        "manualEntryEnabled" : {
          "type" : "boolean"
        },
        "automaticGenerationEnabled" : {
          "type" : "boolean"
        },
        "full" : {
          "type" : "string"
        }
      }
    },
    "IdgenAutogenerationoptionGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "IdgenAutogenerationoptionGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "identifierType" : {
          "$ref" : "#/definitions/PatientidentifiertypeGet"
        },
        "location" : {
          "$ref" : "#/definitions/LocationGet"
        },
        "source" : {
          "$ref" : "#/definitions/IdgenIdentifiersourceGet"
        },
        "manualEntryEnabled" : {
          "type" : "boolean"
        },
        "automaticGenerationEnabled" : {
          "type" : "boolean"
        }
      }
    },
    "IdgenAutogenerationoptionCreate" : {
      "properties" : {
        "identifierType" : {
          "$ref" : "#/definitions/PatientidentifiertypeGet"
        },
        "location" : {
          "$ref" : "#/definitions/LocationGet"
        },
        "source" : {
          "$ref" : "#/definitions/IdgenIdentifiersourceGet"
        },
        "manualEntryEnabled" : {
          "type" : "boolean"
        },
        "automaticGenerationEnabled" : {
          "type" : "boolean"
        }
      }
    },
    "IdgenAutogenerationoptionCreateFull" : {
      "properties" : {
        "identifierType" : {
          "$ref" : "#/definitions/PatientidentifiertypeGet"
        },
        "location" : {
          "$ref" : "#/definitions/LocationGet"
        },
        "source" : {
          "$ref" : "#/definitions/IdgenIdentifiersourceGet"
        },
        "manualEntryEnabled" : {
          "type" : "boolean"
        },
        "automaticGenerationEnabled" : {
          "type" : "boolean"
        }
      }
    },
    "IdgenAutogenerationoptionUpdate" : {
      "properties" : {
        "location" : {
          "$ref" : "#/definitions/LocationGet"
        },
        "source" : {
          "$ref" : "#/definitions/IdgenIdentifiersourceGet"
        },
        "manualEntryEnabled" : {
          "type" : "boolean"
        },
        "automaticGenerationEnabled" : {
          "type" : "boolean"
        }
      }
    },
    "MetadatamappingSourceGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "MetadatamappingSourceGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "MetadatamappingSourceGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "MetadatamappingSourceCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "MetadatamappingSourceCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "MetadatamappingSourceUpdate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "Queue-roomGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "Queue-roomGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "Queue-roomGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "UserGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        },
        "systemId" : {
          "type" : "string"
        },
        "userProperties" : {
          "type" : "object"
        },
        "person" : {
          "$ref" : "#/definitions/PersonGetRef"
        },
        "privileges" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PrivilegeGetRef"
          }
        },
        "roles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleGetRef"
          }
        }
      }
    },
    "UserGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "UserGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "username" : {
          "type" : "string"
        },
        "systemId" : {
          "type" : "string"
        },
        "userProperties" : {
          "type" : "object"
        },
        "person" : {
          "$ref" : "#/definitions/PersonGet"
        },
        "privileges" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PrivilegeGet"
          }
        },
        "roles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleGet"
          }
        },
        "allRoles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleGet"
          }
        },
        "proficientLocales" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "secretQuestion" : {
          "type" : "string"
        }
      }
    },
    "UserCreate" : {
      "required" : [ "name", "password", "person", "username" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "person" : {
          "$ref" : "#/definitions/PersonCreate"
        },
        "systemId" : {
          "type" : "string"
        },
        "userProperties" : {
          "type" : "object"
        },
        "roles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleCreate"
          }
        },
        "proficientLocales" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "secretQuestion" : {
          "type" : "string"
        }
      }
    },
    "UserCreateFull" : {
      "required" : [ "name", "password", "person", "username" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "person" : {
          "$ref" : "#/definitions/PersonCreate"
        },
        "systemId" : {
          "type" : "string"
        },
        "userProperties" : {
          "type" : "object"
        },
        "roles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleCreate"
          }
        },
        "proficientLocales" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "secretQuestion" : {
          "type" : "string"
        }
      }
    },
    "UserUpdate" : {
      "required" : [ "name", "password", "person", "username" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "person" : {
          "$ref" : "#/definitions/PersonCreate"
        },
        "systemId" : {
          "type" : "string"
        },
        "userProperties" : {
          "type" : "object"
        },
        "roles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleCreate"
          }
        },
        "proficientLocales" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "secretQuestion" : {
          "type" : "string"
        }
      }
    },
    "ConceptmaptypeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "isHidden" : {
          "type" : "boolean"
        }
      }
    },
    "ConceptmaptypeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "ConceptmaptypeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "isHidden" : {
          "type" : "boolean"
        }
      }
    },
    "ConceptmaptypeCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "isHidden" : {
          "type" : "boolean"
        }
      }
    },
    "ConceptmaptypeCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "isHidden" : {
          "type" : "boolean"
        }
      }
    },
    "ConceptmaptypeUpdate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "isHidden" : {
          "type" : "boolean"
        }
      }
    },
    "IdgenLogentryGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "identifier" : {
          "type" : "string"
        },
        "comment" : {
          "type" : "string"
        },
        "generatedBy" : {
          "$ref" : "#/definitions/UserGet"
        },
        "dateGenerated" : {
          "type" : "string",
          "format" : "date"
        },
        "description" : {
          "type" : "string"
        },
        "full" : {
          "type" : "string"
        }
      }
    },
    "IdgenLogentryGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "identifier" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "comment" : {
          "type" : "string"
        },
        "generatedBy" : {
          "$ref" : "#/definitions/UserGet"
        },
        "dateGenerated" : {
          "type" : "string",
          "format" : "date"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "IdgenLogentryGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "Hl7Create" : {
      "required" : [ "hl7" ],
      "properties" : {
        "hl7" : {
          "type" : "string"
        }
      }
    },
    "Hl7CreateFull" : {
      "required" : [ "hl7" ],
      "properties" : {
        "hl7" : {
          "type" : "string"
        }
      }
    },
    "ModuleactionCreate" : {
      "required" : [ "action" ],
      "properties" : {
        "modules" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "moduleId"
          }
        },
        "allModules" : {
          "type" : "boolean"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "START", "STOP", "RESTART", "UNLOAD", "INSTALL" ]
        },
        "installUri" : {
          "type" : "string"
        }
      }
    },
    "ModuleactionCreateFull" : {
      "required" : [ "action" ],
      "properties" : {
        "modules" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "moduleId"
          }
        },
        "allModules" : {
          "type" : "boolean"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "START", "STOP", "RESTART", "UNLOAD", "INSTALL" ]
        },
        "installUri" : {
          "type" : "string"
        }
      }
    },
    "ConceptclassGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "ConceptclassGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "ConceptclassGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "ConceptclassCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ConceptclassCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ConceptclassUpdate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ProgramenrollmentCreate" : {
      "required" : [ "dateEnrolled", "patient", "program" ],
      "properties" : {
        "patient" : {
          "type" : "string",
          "example" : "uuid"
        },
        "program" : {
          "type" : "string",
          "example" : "uuid"
        },
        "dateEnrolled" : {
          "type" : "string",
          "format" : "date"
        },
        "dateCompleted" : {
          "type" : "string",
          "format" : "date"
        },
        "location" : {
          "type" : "string",
          "example" : "uuid"
        },
        "voided" : {
          "type" : "boolean"
        },
        "states" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProgramenrollmentStateCreate"
          }
        },
        "outcome" : {
          "$ref" : "#/definitions/ConceptCreate"
        }
      }
    },
    "ProgramenrollmentCreateFull" : {
      "required" : [ "dateEnrolled", "patient", "program" ],
      "properties" : {
        "patient" : {
          "$ref" : "#/definitions/PatientCreate"
        },
        "program" : {
          "$ref" : "#/definitions/ProgramCreate"
        },
        "dateEnrolled" : {
          "type" : "string",
          "format" : "date"
        },
        "dateCompleted" : {
          "type" : "string",
          "format" : "date"
        },
        "location" : {
          "$ref" : "#/definitions/LocationCreate"
        },
        "voided" : {
          "type" : "boolean"
        },
        "states" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProgramenrollmentStateCreate"
          }
        },
        "outcome" : {
          "$ref" : "#/definitions/ConceptCreate"
        }
      }
    },
    "ProgramenrollmentGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "dateEnrolled" : {
          "type" : "string",
          "format" : "date"
        },
        "dateCompleted" : {
          "type" : "string",
          "format" : "date"
        },
        "voided" : {
          "type" : "boolean"
        },
        "patient" : {
          "$ref" : "#/definitions/PatientGetRef"
        },
        "program" : {
          "$ref" : "#/definitions/ProgramGetRef"
        },
        "location" : {
          "$ref" : "#/definitions/LocationGetRef"
        }
      }
    },
    "ProgramenrollmentGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ProgramenrollmentGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "dateEnrolled" : {
          "type" : "string",
          "format" : "date"
        },
        "dateCompleted" : {
          "type" : "string",
          "format" : "date"
        },
        "voided" : {
          "type" : "boolean"
        },
        "patient" : {
          "$ref" : "#/definitions/PatientGet"
        },
        "program" : {
          "$ref" : "#/definitions/ProgramGet"
        },
        "location" : {
          "$ref" : "#/definitions/LocationGet"
        }
      }
    },
    "ProgramenrollmentUpdate" : {
      "required" : [ "dateEnrolled" ],
      "properties" : {
        "dateEnrolled" : {
          "type" : "string",
          "format" : "date"
        },
        "states" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProgramenrollmentStateCreate"
          }
        },
        "outcome" : {
          "$ref" : "#/definitions/ConceptCreate"
        },
        "location" : {
          "$ref" : "#/definitions/LocationCreate"
        },
        "voided" : {
          "type" : "boolean"
        },
        "dateCompleted" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "PatientflagsDisplaypointGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "PatientflagsDisplaypointGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "PatientflagsDisplaypointGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "PatientflagsDisplaypointCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "PatientflagsDisplaypointCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "PatientflagsDisplaypointUpdate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "CohortmCohort-member-attribute-typeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        }
      }
    },
    "CohortmCohort-member-attribute-typeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "CohortmCohort-member-attribute-typeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "CohortmCohort-member-attribute-typeCreate" : {
      "required" : [ "datatypeClassname", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "CohortmCohort-member-attribute-typeCreateFull" : {
      "required" : [ "datatypeClassname", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "CohortmCohort-member-attribute-typeUpdate" : {
      "required" : [ "datatypeClassname", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "CohortmCohorttypeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "CohortmCohorttypeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "CohortmCohorttypeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ProviderGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "person" : {
          "$ref" : "#/definitions/PersonGetRef"
        },
        "identifier" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProviderAttributeGetRef"
          }
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        }
      }
    },
    "ProviderGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "ProviderGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "person" : {
          "$ref" : "#/definitions/PersonGet"
        },
        "identifier" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProviderAttributeGet"
          }
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        }
      }
    },
    "ProviderCreate" : {
      "required" : [ "identifier", "name", "person" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "person" : {
          "type" : "string",
          "example" : "uuid"
        },
        "identifier" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProviderAttributeCreate"
          }
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "ProviderCreateFull" : {
      "required" : [ "identifier", "name", "person" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "person" : {
          "$ref" : "#/definitions/PersonCreate"
        },
        "identifier" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProviderAttributeCreate"
          }
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "ProviderUpdate" : {
      "required" : [ "identifier", "name", "person" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "person" : {
          "type" : "string",
          "example" : "uuid"
        },
        "identifier" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProviderAttributeCreate"
          }
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "VisitattributetypeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        }
      }
    },
    "VisitattributetypeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "VisitattributetypeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "VisitattributetypeCreate" : {
      "required" : [ "datatypeClassname", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "VisitattributetypeCreateFull" : {
      "required" : [ "datatypeClassname", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "VisitattributetypeUpdate" : {
      "required" : [ "datatypeClassname", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "RoleGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "privileges" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PrivilegeGetRef"
          }
        },
        "inheritedRoles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleGetRef"
          }
        }
      }
    },
    "RoleGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "RoleGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "privileges" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PrivilegeGet"
          }
        },
        "inheritedRoles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleGet"
          }
        },
        "allInheritedRoles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleGet"
          }
        }
      }
    },
    "RoleCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "privileges" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PrivilegeCreate"
          }
        },
        "inheritedRoles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleCreate"
          }
        }
      }
    },
    "RoleCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "privileges" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PrivilegeCreate"
          }
        },
        "inheritedRoles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleCreate"
          }
        }
      }
    },
    "RoleUpdate" : {
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "privileges" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PrivilegeCreate"
          }
        },
        "inheritedRoles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleCreate"
          }
        }
      }
    },
    "Queue-entryGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "Queue-entryGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "Queue-entryGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "QueueGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "QueueGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "QueueGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "OrdertemplatesOrderTemplateGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "OrdertemplatesOrderTemplateGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "OrdertemplatesOrderTemplateGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "EncounterroleGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "EncounterroleGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "EncounterroleGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "EncounterroleCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "EncounterroleCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "EncounterroleUpdate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "AttachmentGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "AttachmentGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "AttachmentGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ReportingrestCohortCreate" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "renderingMode" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "string"
        },
        "schedule" : {
          "type" : "string"
        },
        "requestedBy" : {
          "type" : "string"
        },
        "requestDate" : {
          "type" : "string",
          "format" : "date"
        },
        "status" : {
          "type" : "string"
        },
        "evaluateStartDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "evaluateCompleteDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "renderCompleteDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestCohortCreateFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "renderingMode" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "string"
        },
        "schedule" : {
          "type" : "string"
        },
        "requestedBy" : {
          "type" : "string"
        },
        "requestDate" : {
          "type" : "string",
          "format" : "date"
        },
        "status" : {
          "type" : "string"
        },
        "evaluateStartDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "evaluateCompleteDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "renderCompleteDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestCohortGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "renderingMode" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "string"
        },
        "schedule" : {
          "type" : "string"
        },
        "requestedBy" : {
          "type" : "string"
        },
        "requestDate" : {
          "type" : "string",
          "format" : "date"
        },
        "status" : {
          "type" : "string"
        },
        "evaluateStartDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "evaluateCompleteDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "renderCompleteDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestCohortGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "renderingMode" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "string"
        },
        "schedule" : {
          "type" : "string"
        },
        "requestedBy" : {
          "type" : "string"
        },
        "requestDate" : {
          "type" : "string",
          "format" : "date"
        },
        "status" : {
          "type" : "string"
        },
        "evaluateStartDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "evaluateCompleteDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "renderCompleteDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestCohortGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "renderingMode" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "string"
        },
        "schedule" : {
          "type" : "string"
        },
        "requestedBy" : {
          "type" : "string"
        },
        "requestDate" : {
          "type" : "string",
          "format" : "date"
        },
        "status" : {
          "type" : "string"
        },
        "evaluateStartDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "evaluateCompleteDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "renderCompleteDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestCohortUpdate" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "renderingMode" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "string"
        },
        "schedule" : {
          "type" : "string"
        },
        "requestedBy" : {
          "type" : "string"
        },
        "requestDate" : {
          "type" : "string",
          "format" : "date"
        },
        "status" : {
          "type" : "string"
        },
        "evaluateStartDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "evaluateCompleteDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "renderCompleteDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "Hl7sourceCreate" : {
      "required" : [ "description", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "Hl7sourceCreateFull" : {
      "required" : [ "description", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "Hl7sourceGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "Hl7sourceGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "Hl7sourceGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "Hl7sourceUpdate" : {
      "required" : [ "description", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "PatientCreate" : {
      "required" : [ "identifiers", "person" ],
      "properties" : {
        "person" : {
          "type" : "string",
          "example" : "uuid"
        },
        "identifiers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PatientIdentifierCreate"
          }
        }
      }
    },
    "PatientCreateFull" : {
      "required" : [ "identifiers", "person" ],
      "properties" : {
        "person" : {
          "$ref" : "#/definitions/PersonCreate"
        },
        "identifiers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PatientIdentifierCreate"
          }
        }
      }
    },
    "PatientGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "identifiers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PatientIdentifierGetRef"
          }
        },
        "preferred" : {
          "type" : "boolean",
          "default" : false
        },
        "voided" : {
          "type" : "boolean"
        },
        "person" : {
          "$ref" : "#/definitions/PersonGetRef"
        }
      }
    },
    "PatientGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "PatientGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "identifiers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PatientIdentifierGetRef"
          }
        },
        "preferred" : {
          "type" : "boolean",
          "default" : false
        },
        "voided" : {
          "type" : "boolean"
        },
        "person" : {
          "$ref" : "#/definitions/PersonGet"
        }
      }
    },
    "PatientUpdate" : {
      "required" : [ "person" ],
      "properties" : {
        "person" : {
          "$ref" : "#/definitions/PersonGet"
        }
      }
    },
    "RelationshipGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        },
        "personA" : {
          "$ref" : "#/definitions/PersonGetRef"
        },
        "relationshipType" : {
          "$ref" : "#/definitions/RelationshiptypeGetRef"
        },
        "personB" : {
          "$ref" : "#/definitions/PersonGetRef"
        }
      }
    },
    "RelationshipGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "RelationshipGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        },
        "personA" : {
          "$ref" : "#/definitions/PersonGet"
        },
        "relationshipType" : {
          "$ref" : "#/definitions/RelationshiptypeGet"
        },
        "personB" : {
          "$ref" : "#/definitions/PersonGet"
        }
      }
    },
    "RelationshipCreate" : {
      "required" : [ "personA", "personB", "relationshipType" ],
      "properties" : {
        "personA" : {
          "type" : "string",
          "example" : "uuid"
        },
        "relationshipType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "personB" : {
          "type" : "string",
          "example" : "uuid"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "RelationshipCreateFull" : {
      "required" : [ "personA", "personB", "relationshipType" ],
      "properties" : {
        "personA" : {
          "$ref" : "#/definitions/PersonCreate"
        },
        "relationshipType" : {
          "$ref" : "#/definitions/RelationshiptypeCreate"
        },
        "personB" : {
          "$ref" : "#/definitions/PersonCreate"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "RelationshipUpdate" : {
      "properties" : {
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "TaskactionCreate" : {
      "required" : [ "action" ],
      "properties" : {
        "tasks" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "allTasks" : {
          "type" : "boolean"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "SCHEDULETASK", "SHUTDOWNTASK", "RESCHEDULETASK", "RESCHEDULEALLTASKS", "DELETE", "RUNTASK" ]
        }
      }
    },
    "TaskactionCreateFull" : {
      "required" : [ "action" ],
      "properties" : {
        "tasks" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "allTasks" : {
          "type" : "boolean"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "SCHEDULETASK", "SHUTDOWNTASK", "RESCHEDULETASK", "RESCHEDULEALLTASKS", "DELETE", "RUNTASK" ]
        }
      }
    },
    "TaskactionGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "TaskactionGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "TaskactionGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ConceptstateconversionGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGetRef"
        },
        "programWorkflow" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkflowGetRef"
          }
        },
        "programWorkflowState" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkflowStateGetRef"
          }
        }
      }
    },
    "ConceptstateconversionGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGetRef"
        },
        "programWorkflow" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkflowGetRef"
          }
        },
        "programWorkflowState" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkflowStateGetRef"
          }
        }
      }
    },
    "ConceptstateconversionGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGetRef"
        },
        "programWorkflow" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkflowGetRef"
          }
        },
        "programWorkflowState" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkflowStateGetRef"
          }
        }
      }
    },
    "ConceptstateconversionCreate" : {
      "properties" : {
        "concept" : {
          "$ref" : "#/definitions/ConceptGetRef"
        },
        "programWorkflow" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkflowCreateRef"
          }
        },
        "programWorkflowState" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkflowStateCreateRef"
          }
        }
      }
    },
    "ConceptstateconversionCreateFull" : {
      "properties" : {
        "concept" : {
          "$ref" : "#/definitions/ConceptGetRef"
        },
        "programWorkflow" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkflowGet"
          }
        },
        "programWorkflowState" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkflowStateGet"
          }
        }
      }
    },
    "ConceptstateconversionUpdate" : {
      "properties" : {
        "concept" : {
          "$ref" : "#/definitions/ConceptGetRef"
        },
        "programWorkflow" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkflowCreateRef"
          }
        },
        "programWorkflowState" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkflowStateCreateRef"
          }
        }
      }
    },
    "PatientflagsPatientflagGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "PatientflagsPatientflagGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "PatientflagsPatientflagGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "LocationattributetypeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        }
      }
    },
    "LocationattributetypeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "LocationattributetypeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "LocationattributetypeCreate" : {
      "required" : [ "datatypeClassname", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "LocationattributetypeCreateFull" : {
      "required" : [ "datatypeClassname", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "LocationattributetypeUpdate" : {
      "required" : [ "datatypeClassname", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "CohortGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "CohortGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "CohortGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "CohortCreate" : {
      "required" : [ "description", "memberIds", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "memberIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    },
    "CohortCreateFull" : {
      "required" : [ "description", "memberIds", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "memberIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    },
    "CohortUpdate" : {
      "required" : [ "description", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "IdgenIdentifiersourceGet" : {
      "properties" : {
        "uuid" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "identifierType" : {
          "$ref" : "#/definitions/PatientidentifiertypeGet"
        }
      }
    },
    "IdgenIdentifiersourceGetRef" : {
      "properties" : {
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "IdgenIdentifiersourceGetFull" : {
      "properties" : {
        "uuid" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "identifierType" : {
          "$ref" : "#/definitions/PatientidentifiertypeGet"
        }
      }
    },
    "IdgenIdentifiersourceCreate" : {
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "identifierType" : {
          "$ref" : "#/definitions/PatientidentifiertypeGet"
        }
      }
    },
    "IdgenIdentifiersourceCreateFull" : {
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "identifierType" : {
          "$ref" : "#/definitions/PatientidentifiertypeGet"
        }
      }
    },
    "IdgenIdentifiersourceUpdate" : {
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "identifierType" : {
          "$ref" : "#/definitions/PatientidentifiertypeGet"
        }
      }
    },
    "ReportingrestReportDefinitionGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestReportDefinitionGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestReportDefinitionGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "ReportingrestReportDefinitionCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestReportDefinitionCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestReportDefinitionUpdate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ObsCreate" : {
      "required" : [ "concept", "obsDatetime", "person" ],
      "properties" : {
        "person" : {
          "type" : "string",
          "example" : "uuid"
        },
        "obsDatetime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "concept" : {
          "type" : "string",
          "example" : "uuid"
        },
        "location" : {
          "type" : "string"
        },
        "order" : {
          "type" : "string"
        },
        "encounter" : {
          "type" : "string"
        },
        "accessionNumber" : {
          "type" : "string"
        },
        "groupMembers" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "valueCodedName" : {
          "type" : "string"
        },
        "comment" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        },
        "value" : {
          "type" : "string"
        },
        "valueModifier" : {
          "type" : "string"
        },
        "formFieldPath" : {
          "type" : "string"
        },
        "formFieldNamespace" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "PRELIMINARY", "FINAL", "AMENDED" ]
        },
        "interpretation" : {
          "type" : "string",
          "enum" : [ "NORMAL", "ABNORMAL", "CRITICALLY_ABNORMAL", "NEGATIVE", "POSITIVE", "CRITICALLY_LOW", "LOW", "HIGH", "CRITICALLY_HIGH", "VERY_SUSCEPTIBLE", "SUSCEPTIBLE", "INTERMEDIATE", "RESISTANT", "SIGNIFICANT_CHANGE_DOWN", "SIGNIFICANT_CHANGE_UP", "OFF_SCALE_LOW", "OFF_SCALE_HIGH" ]
        }
      }
    },
    "ObsCreateFull" : {
      "required" : [ "concept", "obsDatetime", "person" ],
      "properties" : {
        "person" : {
          "type" : "string",
          "example" : "uuid"
        },
        "obsDatetime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "concept" : {
          "type" : "string",
          "example" : "uuid"
        },
        "location" : {
          "type" : "string"
        },
        "order" : {
          "type" : "string"
        },
        "encounter" : {
          "type" : "string"
        },
        "accessionNumber" : {
          "type" : "string"
        },
        "groupMembers" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "valueCodedName" : {
          "type" : "string"
        },
        "comment" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        },
        "value" : {
          "type" : "string"
        },
        "valueModifier" : {
          "type" : "string"
        },
        "formFieldPath" : {
          "type" : "string"
        },
        "formFieldNamespace" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "PRELIMINARY", "FINAL", "AMENDED" ]
        },
        "interpretation" : {
          "type" : "string",
          "enum" : [ "NORMAL", "ABNORMAL", "CRITICALLY_ABNORMAL", "NEGATIVE", "POSITIVE", "CRITICALLY_LOW", "LOW", "HIGH", "CRITICALLY_HIGH", "VERY_SUSCEPTIBLE", "SUSCEPTIBLE", "INTERMEDIATE", "RESISTANT", "SIGNIFICANT_CHANGE_DOWN", "SIGNIFICANT_CHANGE_UP", "OFF_SCALE_LOW", "OFF_SCALE_HIGH" ]
        }
      }
    },
    "ObsGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "obsDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "accessionNumber" : {
          "type" : "string"
        },
        "comment" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        },
        "value" : {
          "type" : "string"
        },
        "valueModifier" : {
          "type" : "string"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGetRef"
        },
        "person" : {
          "$ref" : "#/definitions/PersonGetRef"
        },
        "obsGroup" : {
          "$ref" : "#/definitions/ObsGetRef"
        },
        "groupMembers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ObsGetRef"
          }
        },
        "valueCodedName" : {
          "$ref" : "#/definitions/ConceptNameGetRef"
        },
        "location" : {
          "$ref" : "#/definitions/LocationGetRef"
        },
        "order" : {
          "$ref" : "#/definitions/OrderGetRef"
        },
        "encounter" : {
          "$ref" : "#/definitions/EncounterGetRef"
        },
        "formFieldPath" : {
          "type" : "string"
        },
        "formFieldNamespace" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "PRELIMINARY", "FINAL", "AMENDED" ]
        },
        "interpretation" : {
          "type" : "string",
          "enum" : [ "NORMAL", "ABNORMAL", "CRITICALLY_ABNORMAL", "NEGATIVE", "POSITIVE", "CRITICALLY_LOW", "LOW", "HIGH", "CRITICALLY_HIGH", "VERY_SUSCEPTIBLE", "SUSCEPTIBLE", "INTERMEDIATE", "RESISTANT", "SIGNIFICANT_CHANGE_DOWN", "SIGNIFICANT_CHANGE_UP", "OFF_SCALE_LOW", "OFF_SCALE_HIGH" ]
        }
      }
    },
    "ObsGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "formFieldPath" : {
          "type" : "string"
        },
        "formFieldNamespace" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "PRELIMINARY", "FINAL", "AMENDED" ]
        },
        "interpretation" : {
          "type" : "string",
          "enum" : [ "NORMAL", "ABNORMAL", "CRITICALLY_ABNORMAL", "NEGATIVE", "POSITIVE", "CRITICALLY_LOW", "LOW", "HIGH", "CRITICALLY_HIGH", "VERY_SUSCEPTIBLE", "SUSCEPTIBLE", "INTERMEDIATE", "RESISTANT", "SIGNIFICANT_CHANGE_DOWN", "SIGNIFICANT_CHANGE_UP", "OFF_SCALE_LOW", "OFF_SCALE_HIGH" ]
        }
      }
    },
    "ObsGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "obsDatetime" : {
          "type" : "string",
          "format" : "date"
        },
        "accessionNumber" : {
          "type" : "string"
        },
        "comment" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        },
        "value" : {
          "type" : "string"
        },
        "valueModifier" : {
          "type" : "string"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGet"
        },
        "person" : {
          "$ref" : "#/definitions/PersonGet"
        },
        "obsGroup" : {
          "$ref" : "#/definitions/ObsGet"
        },
        "groupMembers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ObsGet"
          }
        },
        "valueCodedName" : {
          "$ref" : "#/definitions/ConceptNameGet"
        },
        "location" : {
          "$ref" : "#/definitions/LocationGet"
        },
        "order" : {
          "$ref" : "#/definitions/OrderGet"
        },
        "encounter" : {
          "$ref" : "#/definitions/EncounterGet"
        },
        "formFieldPath" : {
          "type" : "string"
        },
        "formFieldNamespace" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "PRELIMINARY", "FINAL", "AMENDED" ]
        },
        "interpretation" : {
          "type" : "string",
          "enum" : [ "NORMAL", "ABNORMAL", "CRITICALLY_ABNORMAL", "NEGATIVE", "POSITIVE", "CRITICALLY_LOW", "LOW", "HIGH", "CRITICALLY_HIGH", "VERY_SUSCEPTIBLE", "SUSCEPTIBLE", "INTERMEDIATE", "RESISTANT", "SIGNIFICANT_CHANGE_DOWN", "SIGNIFICANT_CHANGE_UP", "OFF_SCALE_LOW", "OFF_SCALE_HIGH" ]
        }
      }
    },
    "ObsUpdate" : { },
    "ConceptGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "$ref" : "#/definitions/ConceptNameGet"
        },
        "datatype" : {
          "$ref" : "#/definitions/ConceptdatatypeGetRef"
        },
        "conceptClass" : {
          "$ref" : "#/definitions/ConceptclassGetRef"
        },
        "set" : {
          "type" : "boolean"
        },
        "version" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "names" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConceptNameGetRef"
          }
        },
        "descriptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConceptDescriptionGetRef"
          }
        },
        "mappings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConceptMappingGetRef"
          }
        },
        "answers" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "setMembers" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "ConceptGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "ConceptGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "ConceptCreate" : {
      "required" : [ "conceptClass", "datatype", "names" ],
      "properties" : {
        "names" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConceptNameCreate"
          }
        },
        "datatype" : {
          "type" : "string",
          "example" : "uuid"
        },
        "set" : {
          "type" : "boolean"
        },
        "version" : {
          "type" : "string"
        },
        "answers" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "uuid"
          }
        },
        "setMembers" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "uuid"
          }
        },
        "hiNormal" : {
          "type" : "string"
        },
        "hiAbsolute" : {
          "type" : "string"
        },
        "hiCritical" : {
          "type" : "string"
        },
        "lowNormal" : {
          "type" : "string"
        },
        "lowAbsolute" : {
          "type" : "string"
        },
        "lowCritical" : {
          "type" : "string"
        },
        "units" : {
          "type" : "string"
        },
        "allowDecimal" : {
          "type" : "string"
        },
        "displayPrecision" : {
          "type" : "string"
        },
        "conceptClass" : {
          "type" : "string"
        },
        "descriptions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "mappings" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ConceptCreateFull" : {
      "required" : [ "conceptClass", "datatype", "names" ],
      "properties" : {
        "names" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConceptNameCreate"
          }
        },
        "datatype" : {
          "type" : "string",
          "example" : "uuid"
        },
        "set" : {
          "type" : "boolean"
        },
        "version" : {
          "type" : "string"
        },
        "answers" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "uuid"
          }
        },
        "setMembers" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "uuid"
          }
        },
        "hiNormal" : {
          "type" : "string"
        },
        "hiAbsolute" : {
          "type" : "string"
        },
        "hiCritical" : {
          "type" : "string"
        },
        "lowNormal" : {
          "type" : "string"
        },
        "lowAbsolute" : {
          "type" : "string"
        },
        "lowCritical" : {
          "type" : "string"
        },
        "units" : {
          "type" : "string"
        },
        "allowDecimal" : {
          "type" : "string"
        },
        "displayPrecision" : {
          "type" : "string"
        },
        "conceptClass" : {
          "$ref" : "#/definitions/ConceptclassCreate"
        },
        "descriptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConceptDescriptionCreate"
          }
        },
        "mappings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConceptMappingCreate"
          }
        }
      }
    },
    "ConceptUpdate" : {
      "properties" : {
        "name" : {
          "$ref" : "#/definitions/ConceptNameCreate"
        },
        "names" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConceptNameCreate"
          }
        },
        "descriptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConceptDescriptionCreate"
          }
        }
      }
    },
    "ConceptreferencetermmapCreate" : {
      "required" : [ "conceptMapType", "termA", "termB" ],
      "properties" : {
        "termA" : {
          "$ref" : "#/definitions/ConceptreferencetermCreate"
        },
        "termB" : {
          "$ref" : "#/definitions/ConceptreferencetermCreate"
        },
        "conceptMapType" : {
          "$ref" : "#/definitions/ConceptmaptypeCreate"
        }
      }
    },
    "ConceptreferencetermmapCreateFull" : {
      "required" : [ "conceptMapType", "termA", "termB" ],
      "properties" : {
        "termA" : {
          "$ref" : "#/definitions/ConceptreferencetermCreate"
        },
        "termB" : {
          "$ref" : "#/definitions/ConceptreferencetermCreate"
        },
        "conceptMapType" : {
          "$ref" : "#/definitions/ConceptmaptypeCreate"
        }
      }
    },
    "ConceptreferencetermmapGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "termA" : {
          "$ref" : "#/definitions/ConceptreferencetermGetRef"
        },
        "termB" : {
          "$ref" : "#/definitions/ConceptreferencetermGetRef"
        },
        "conceptMapType" : {
          "$ref" : "#/definitions/ConceptmaptypeGetRef"
        }
      }
    },
    "ConceptreferencetermmapGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ConceptreferencetermmapGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "termA" : {
          "$ref" : "#/definitions/ConceptreferencetermGet"
        },
        "termB" : {
          "$ref" : "#/definitions/ConceptreferencetermGet"
        },
        "conceptMapType" : {
          "$ref" : "#/definitions/ConceptmaptypeGet"
        }
      }
    },
    "ConceptreferencetermmapUpdate" : { },
    "WorkflowCreate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "WorkflowCreateFull" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "WorkflowGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGetRef"
        },
        "states" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkflowStateGetRef"
          }
        }
      }
    },
    "WorkflowGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGet"
        },
        "states" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkflowStateGet"
          }
        }
      }
    },
    "WorkflowGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGet"
        },
        "states" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WorkflowStateGet"
          }
        }
      }
    },
    "WorkflowUpdate" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "CohortmCohortattributetypeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        }
      }
    },
    "CohortmCohortattributetypeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "CohortmCohortattributetypeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "CohortmCohortattributetypeCreate" : {
      "required" : [ "datatypeClassname", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "CohortmCohortattributetypeCreateFull" : {
      "required" : [ "datatypeClassname", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "CohortmCohortattributetypeUpdate" : {
      "required" : [ "datatypeClassname", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "datatypeConfig" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "EncountertypeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "EncountertypeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "EncountertypeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "EncountertypeCreate" : {
      "required" : [ "description", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "EncountertypeCreateFull" : {
      "required" : [ "description", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "EncountertypeUpdate" : {
      "required" : [ "description", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestReportdataCreate" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "dataSets" : {
          "type" : "string"
        },
        "context" : {
          "type" : "string"
        },
        "definition" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestReportdataCreateFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "dataSets" : {
          "type" : "string"
        },
        "context" : {
          "type" : "string"
        },
        "definition" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestReportdataGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "dataSets" : {
          "type" : "string"
        },
        "context" : {
          "type" : "string"
        },
        "definition" : {
          "type" : "string"
        }
      }
    },
    "ReportingrestReportdataGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ReportingrestReportdataGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ReportingrestReportdataUpdate" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "dataSets" : {
          "type" : "string"
        },
        "context" : {
          "type" : "string"
        },
        "definition" : {
          "type" : "string"
        }
      }
    },
    "OpenconceptlabImportGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "OpenconceptlabImportGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "OpenconceptlabImportGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ConceptMappingGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "conceptReferenceTerm" : {
          "$ref" : "#/definitions/ConceptreferencetermGetRef"
        },
        "conceptMapType" : {
          "$ref" : "#/definitions/ConceptmaptypeGetRef"
        }
      }
    },
    "ConceptMappingGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ConceptMappingGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "conceptReferenceTerm" : {
          "$ref" : "#/definitions/ConceptreferencetermGet"
        },
        "conceptMapType" : {
          "$ref" : "#/definitions/ConceptmaptypeGet"
        }
      }
    },
    "ConceptMappingCreate" : {
      "required" : [ "conceptMapType", "conceptReferenceTerm" ],
      "properties" : {
        "conceptReferenceTerm" : {
          "$ref" : "#/definitions/ConceptreferencetermCreate"
        },
        "conceptMapType" : {
          "$ref" : "#/definitions/ConceptmaptypeCreate"
        }
      }
    },
    "ConceptMappingCreateFull" : {
      "required" : [ "conceptMapType", "conceptReferenceTerm" ],
      "properties" : {
        "conceptReferenceTerm" : {
          "$ref" : "#/definitions/ConceptreferencetermCreate"
        },
        "conceptMapType" : {
          "$ref" : "#/definitions/ConceptmaptypeCreate"
        }
      }
    },
    "ConceptMappingUpdate" : {
      "required" : [ "conceptMapType", "conceptReferenceTerm" ],
      "properties" : {
        "conceptReferenceTerm" : {
          "$ref" : "#/definitions/ConceptreferencetermCreate"
        },
        "conceptMapType" : {
          "$ref" : "#/definitions/ConceptmaptypeCreate"
        }
      }
    },
    "CohortmCohortmemberAttributeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "CohortmCohortmemberAttributeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "CohortmCohortmemberAttributeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "CohortmCohortmemberAttributeCreate" : {
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "CohortmCohortmemberAttributeCreateFull" : {
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "CohortmCohortmemberAttributeUpdate" : {
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "MetadatamappingMetadatasetMembersGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "MetadatamappingMetadatasetMembersGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "MetadatamappingMetadatasetMembersGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "OpenconceptlabImportItemGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "OpenconceptlabImportItemGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "OpenconceptlabImportItemGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "CustomdatatypeHandlersGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "handlerClassname" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "CustomdatatypeHandlersGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "CustomdatatypeHandlersGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "handlerClassname" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "WorkflowStateGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGetRef"
        }
      }
    },
    "WorkflowStateGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGetRef"
        }
      }
    },
    "WorkflowStateGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGet"
        }
      }
    },
    "WorkflowStateCreate" : { },
    "WorkflowStateCreateFull" : { },
    "WorkflowStateUpdate" : { },
    "ProviderAttributeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "ProviderAttributeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ProviderAttributeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "ProviderAttributeCreate" : {
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "ProviderAttributeCreateFull" : {
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "ProviderAttributeUpdate" : {
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "AlertRecipientGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "recipient" : {
          "$ref" : "#/definitions/UserGetRef"
        },
        "alertRead" : {
          "type" : "boolean"
        },
        "dateChanged" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "AlertRecipientGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "AlertRecipientGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "recipient" : {
          "$ref" : "#/definitions/UserGet"
        },
        "alertRead" : {
          "type" : "boolean"
        },
        "dateChanged" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "AlertRecipientCreate" : {
      "properties" : {
        "recipient" : {
          "type" : "string",
          "example" : "uuid"
        }
      }
    },
    "AlertRecipientCreateFull" : {
      "properties" : {
        "recipient" : {
          "$ref" : "#/definitions/UserCreate"
        }
      }
    },
    "AlertRecipientUpdate" : {
      "properties" : {
        "recipient" : {
          "type" : "string",
          "example" : "uuid"
        }
      }
    },
    "PersonNameGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "givenName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "familyName" : {
          "type" : "string"
        },
        "familyName2" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "PersonNameGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "PersonNameGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "givenName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "familyName" : {
          "type" : "string"
        },
        "familyName2" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        },
        "preferred" : {
          "type" : "boolean"
        },
        "prefix" : {
          "type" : "string"
        },
        "familyNamePrefix" : {
          "type" : "string"
        },
        "familyNameSuffix" : {
          "type" : "string"
        },
        "degree" : {
          "type" : "string"
        }
      }
    },
    "PersonNameCreate" : {
      "required" : [ "givenName" ],
      "properties" : {
        "givenName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "familyName" : {
          "type" : "string"
        },
        "familyName2" : {
          "type" : "string"
        },
        "preferred" : {
          "type" : "boolean",
          "default" : false
        },
        "prefix" : {
          "type" : "string"
        },
        "familyNamePrefix" : {
          "type" : "string"
        },
        "familyNameSuffix" : {
          "type" : "string"
        },
        "degree" : {
          "type" : "string"
        }
      }
    },
    "PersonNameCreateFull" : {
      "required" : [ "givenName" ],
      "properties" : {
        "givenName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "familyName" : {
          "type" : "string"
        },
        "familyName2" : {
          "type" : "string"
        },
        "preferred" : {
          "type" : "boolean",
          "default" : false
        },
        "prefix" : {
          "type" : "string"
        },
        "familyNamePrefix" : {
          "type" : "string"
        },
        "familyNameSuffix" : {
          "type" : "string"
        },
        "degree" : {
          "type" : "string"
        }
      }
    },
    "PersonNameUpdate" : {
      "required" : [ "givenName" ],
      "properties" : {
        "givenName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "familyName" : {
          "type" : "string"
        },
        "familyName2" : {
          "type" : "string"
        },
        "preferred" : {
          "type" : "boolean",
          "default" : false
        },
        "prefix" : {
          "type" : "string"
        },
        "familyNamePrefix" : {
          "type" : "string"
        },
        "familyNameSuffix" : {
          "type" : "string"
        },
        "degree" : {
          "type" : "string"
        }
      }
    },
    "CohortmCohortAttributeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "CohortmCohortAttributeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "CohortmCohortAttributeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "CohortmCohortAttributeCreate" : {
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "CohortmCohortAttributeCreateFull" : {
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "CohortmCohortAttributeUpdate" : {
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "PatientIdentifierGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "identifier" : {
          "type" : "string"
        },
        "preferred" : {
          "type" : "boolean",
          "default" : false
        },
        "voided" : {
          "type" : "boolean"
        },
        "identifierType" : {
          "$ref" : "#/definitions/PatientidentifiertypeGetRef"
        },
        "location" : {
          "$ref" : "#/definitions/LocationGetRef"
        }
      }
    },
    "PatientIdentifierGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "PatientIdentifierGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "identifier" : {
          "type" : "string"
        },
        "preferred" : {
          "type" : "boolean",
          "default" : false
        },
        "voided" : {
          "type" : "boolean"
        },
        "identifierType" : {
          "$ref" : "#/definitions/PatientidentifiertypeGet"
        },
        "location" : {
          "$ref" : "#/definitions/LocationGet"
        }
      }
    },
    "PatientIdentifierCreate" : {
      "required" : [ "identifier", "identifierType" ],
      "properties" : {
        "identifier" : {
          "type" : "string"
        },
        "identifierType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "location" : {
          "type" : "string",
          "example" : "uuid"
        },
        "preferred" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PatientIdentifierCreateFull" : {
      "required" : [ "identifier", "identifierType" ],
      "properties" : {
        "identifier" : {
          "type" : "string"
        },
        "identifierType" : {
          "$ref" : "#/definitions/PatientidentifiertypeCreate"
        },
        "location" : {
          "$ref" : "#/definitions/LocationCreate"
        },
        "preferred" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "PatientIdentifierUpdate" : {
      "required" : [ "identifier", "identifierType" ],
      "properties" : {
        "identifier" : {
          "type" : "string"
        },
        "identifierType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "location" : {
          "type" : "string",
          "example" : "uuid"
        },
        "preferred" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "ProgramenrollmentStateCreate" : {
      "required" : [ "state" ],
      "properties" : {
        "state" : {
          "$ref" : "#/definitions/WorkflowStateCreate"
        }
      }
    },
    "ProgramenrollmentStateCreateFull" : {
      "required" : [ "state" ],
      "properties" : {
        "state" : {
          "$ref" : "#/definitions/WorkflowStateCreate"
        }
      }
    },
    "ProgramenrollmentStateGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date"
        },
        "voided" : {
          "type" : "boolean"
        },
        "state" : {
          "$ref" : "#/definitions/WorkflowStateGet"
        }
      }
    },
    "ProgramenrollmentStateGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date"
        },
        "voided" : {
          "type" : "boolean"
        },
        "state" : {
          "$ref" : "#/definitions/WorkflowStateGetRef"
        },
        "patientProgram" : {
          "type" : "object"
        }
      }
    },
    "ProgramenrollmentStateGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date"
        },
        "voided" : {
          "type" : "boolean"
        },
        "state" : {
          "$ref" : "#/definitions/WorkflowStateGetRef"
        },
        "patientProgram" : {
          "type" : "object"
        }
      }
    },
    "ProgramenrollmentStateUpdate" : {
      "properties" : {
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "FieldAnswerGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGetRef"
        },
        "field" : {
          "$ref" : "#/definitions/FieldGetRef"
        }
      }
    },
    "FieldAnswerGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "FieldAnswerGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGet"
        },
        "field" : {
          "$ref" : "#/definitions/FieldGet"
        }
      }
    },
    "FieldAnswerCreate" : {
      "required" : [ "concept", "field" ],
      "properties" : {
        "concept" : {
          "type" : "string",
          "example" : "uuid"
        },
        "field" : {
          "type" : "string",
          "example" : "uuid"
        }
      }
    },
    "FieldAnswerCreateFull" : {
      "required" : [ "concept", "field" ],
      "properties" : {
        "concept" : {
          "$ref" : "#/definitions/ConceptCreate"
        },
        "field" : {
          "$ref" : "#/definitions/FieldCreate"
        }
      }
    },
    "FieldAnswerUpdate" : {
      "required" : [ "concept", "field" ],
      "properties" : {
        "concept" : {
          "type" : "string",
          "example" : "uuid"
        },
        "field" : {
          "type" : "string",
          "example" : "uuid"
        }
      }
    },
    "DrugIngredientGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "strength" : {
          "type" : "number",
          "format" : "double"
        },
        "ingredient" : {
          "$ref" : "#/definitions/ConceptGetRef"
        },
        "units" : {
          "$ref" : "#/definitions/ConceptGetRef"
        }
      }
    },
    "DrugIngredientGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "DrugIngredientGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "strength" : {
          "type" : "number",
          "format" : "double"
        },
        "ingredient" : {
          "$ref" : "#/definitions/ConceptGet"
        },
        "units" : {
          "$ref" : "#/definitions/ConceptGet"
        }
      }
    },
    "DrugIngredientCreate" : {
      "required" : [ "ingredient" ],
      "properties" : {
        "ingredient" : {
          "type" : "string",
          "example" : "uuid"
        },
        "strength" : {
          "type" : "number",
          "format" : "double"
        },
        "units" : {
          "type" : "string",
          "example" : "uuid"
        }
      }
    },
    "DrugIngredientCreateFull" : {
      "required" : [ "ingredient" ],
      "properties" : {
        "ingredient" : {
          "type" : "string",
          "example" : "uuid"
        },
        "strength" : {
          "type" : "number",
          "format" : "double"
        },
        "units" : {
          "type" : "string",
          "example" : "uuid"
        }
      }
    },
    "DrugIngredientUpdate" : {
      "required" : [ "ingredient" ],
      "properties" : {
        "ingredient" : {
          "type" : "string",
          "example" : "uuid"
        },
        "strength" : {
          "type" : "number",
          "format" : "double"
        },
        "units" : {
          "type" : "string",
          "example" : "uuid"
        }
      }
    },
    "ProgramenrollmentAttributeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "ProgramenrollmentAttributeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ProgramenrollmentAttributeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "ProgramenrollmentAttributeCreate" : {
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "ProgramenrollmentAttributeCreateFull" : {
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "ProgramenrollmentAttributeUpdate" : {
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "PersonAttributeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "attributeType" : {
          "$ref" : "#/definitions/PersonattributetypeGetRef"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "PersonAttributeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "PersonAttributeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "attributeType" : {
          "$ref" : "#/definitions/PersonattributetypeGetRef"
        },
        "voided" : {
          "type" : "boolean"
        },
        "hydratedObject" : {
          "type" : "string"
        }
      }
    },
    "PersonAttributeCreate" : {
      "required" : [ "attributeType" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        },
        "hydratedObject" : {
          "type" : "string",
          "example" : "uuid"
        }
      }
    },
    "PersonAttributeCreateFull" : {
      "required" : [ "attributeType" ],
      "properties" : {
        "attributeType" : {
          "$ref" : "#/definitions/PersonattributetypeCreate"
        },
        "value" : {
          "type" : "string"
        },
        "hydratedObject" : {
          "type" : "string",
          "example" : "uuid"
        }
      }
    },
    "PersonAttributeUpdate" : {
      "required" : [ "attributeType" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        },
        "hydratedObject" : {
          "type" : "string",
          "example" : "uuid"
        }
      }
    },
    "ConceptNameGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string",
          "example" : "en"
        },
        "localePreferred" : {
          "type" : "boolean"
        },
        "conceptNameType" : {
          "type" : "string",
          "enum" : [ "FULLY_SPECIFIED", "SHORT", "INDEX_TERM" ]
        }
      }
    },
    "ConceptNameGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "ConceptNameGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string",
          "example" : "en"
        },
        "localePreferred" : {
          "type" : "boolean"
        },
        "conceptNameType" : {
          "type" : "string",
          "enum" : [ "FULLY_SPECIFIED", "SHORT", "INDEX_TERM" ]
        }
      }
    },
    "ConceptNameCreate" : {
      "required" : [ "locale", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string",
          "example" : "en"
        },
        "localePreferred" : {
          "type" : "boolean",
          "default" : false
        },
        "conceptNameType" : {
          "type" : "string",
          "enum" : [ "FULLY_SPECIFIED", "SHORT", "INDEX_TERM" ]
        }
      }
    },
    "ConceptNameCreateFull" : {
      "required" : [ "locale", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string",
          "example" : "en"
        },
        "localePreferred" : {
          "type" : "boolean",
          "default" : false
        },
        "conceptNameType" : {
          "type" : "string",
          "enum" : [ "FULLY_SPECIFIED", "SHORT", "INDEX_TERM" ]
        }
      }
    },
    "ConceptNameUpdate" : {
      "properties" : {
        "name" : {
          "type" : "string"
        }
      }
    },
    "EncounterEncounterproviderGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "provider" : {
          "$ref" : "#/definitions/ProviderGetRef"
        },
        "encounterRole" : {
          "$ref" : "#/definitions/EncounterroleGetRef"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "EncounterEncounterproviderGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "EncounterEncounterproviderGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "provider" : {
          "$ref" : "#/definitions/ProviderGet"
        },
        "encounterRole" : {
          "$ref" : "#/definitions/EncounterroleGet"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "EncounterEncounterproviderCreate" : {
      "properties" : {
        "provider" : {
          "type" : "string",
          "example" : "uuid"
        },
        "encounterRole" : {
          "type" : "string",
          "example" : "uuid"
        },
        "encounter" : {
          "type" : "string"
        }
      }
    },
    "EncounterEncounterproviderCreateFull" : {
      "properties" : {
        "provider" : {
          "$ref" : "#/definitions/ProviderCreate"
        },
        "encounterRole" : {
          "$ref" : "#/definitions/EncounterroleCreate"
        },
        "encounter" : {
          "$ref" : "#/definitions/EncounterCreate"
        }
      }
    },
    "EncounterEncounterproviderUpdate" : {
      "properties" : {
        "encounterRole" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        },
        "voidReason" : {
          "type" : "string"
        }
      }
    },
    "PatientAllergyCreate" : {
      "required" : [ "allergen" ],
      "properties" : {
        "allergen" : {
          "type" : "object"
        },
        "severity" : {
          "type" : "object",
          "properties" : {
            "uuid" : {
              "type" : "string"
            }
          }
        },
        "comment" : {
          "type" : "string"
        },
        "reactions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "allergy" : {
                "type" : "object",
                "properties" : {
                  "uuid" : {
                    "type" : "string"
                  }
                }
              },
              "reaction" : {
                "type" : "object",
                "properties" : {
                  "uuid" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "PatientAllergyCreateFull" : {
      "required" : [ "allergen" ],
      "properties" : {
        "allergen" : {
          "type" : "object"
        },
        "severity" : {
          "type" : "object",
          "properties" : {
            "uuid" : {
              "type" : "string"
            }
          }
        },
        "comment" : {
          "type" : "string"
        },
        "reactions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "allergy" : {
                "type" : "object",
                "properties" : {
                  "uuid" : {
                    "type" : "string"
                  }
                }
              },
              "reaction" : {
                "type" : "object",
                "properties" : {
                  "uuid" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "PatientAllergyGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "allergen" : {
          "type" : "object"
        },
        "severity" : {
          "$ref" : "#/definitions/ConceptGetRef"
        },
        "comment" : {
          "type" : "string"
        },
        "reactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConceptGetRef"
          }
        },
        "patient" : {
          "$ref" : "#/definitions/PatientGetRef"
        }
      }
    },
    "PatientAllergyGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "PatientAllergyGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "allergen" : {
          "type" : "object"
        },
        "severity" : {
          "$ref" : "#/definitions/ConceptGet"
        },
        "comment" : {
          "type" : "string"
        },
        "reactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConceptGet"
          }
        },
        "patient" : {
          "$ref" : "#/definitions/PatientGet"
        }
      }
    },
    "PatientAllergyUpdate" : {
      "required" : [ "allergen" ],
      "properties" : {
        "allergen" : {
          "type" : "object"
        },
        "severity" : {
          "type" : "object",
          "properties" : {
            "uuid" : {
              "type" : "string"
            }
          }
        },
        "comment" : {
          "type" : "string"
        },
        "reactions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "allergy" : {
                "type" : "object",
                "properties" : {
                  "uuid" : {
                    "type" : "string"
                  }
                }
              },
              "reaction" : {
                "type" : "object",
                "properties" : {
                  "uuid" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "ConceptDescriptionGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string"
        }
      }
    },
    "ConceptDescriptionGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "ConceptDescriptionGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string"
        }
      }
    },
    "ConceptDescriptionCreate" : {
      "required" : [ "description", "locale" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string",
          "example" : "fr"
        }
      }
    },
    "ConceptDescriptionCreateFull" : {
      "required" : [ "description", "locale" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string",
          "example" : "fr"
        }
      }
    },
    "ConceptDescriptionUpdate" : {
      "required" : [ "description", "locale" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string",
          "example" : "fr"
        }
      }
    },
    "PersonAddressGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "preferred" : {
          "type" : "boolean",
          "default" : false
        },
        "address1" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "cityVillage" : {
          "type" : "string"
        },
        "stateProvince" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "countyDistrict" : {
          "type" : "string"
        },
        "address3" : {
          "type" : "string"
        },
        "address4" : {
          "type" : "string"
        },
        "address5" : {
          "type" : "string"
        },
        "address6" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date"
        },
        "latitude" : {
          "type" : "string"
        },
        "longitude" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "PersonAddressGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "PersonAddressGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "preferred" : {
          "type" : "boolean",
          "default" : false
        },
        "address1" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "cityVillage" : {
          "type" : "string"
        },
        "stateProvince" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "countyDistrict" : {
          "type" : "string"
        },
        "address3" : {
          "type" : "string"
        },
        "address4" : {
          "type" : "string"
        },
        "address5" : {
          "type" : "string"
        },
        "address6" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date"
        },
        "latitude" : {
          "type" : "string"
        },
        "longitude" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "PersonAddressCreate" : {
      "properties" : {
        "preferred" : {
          "type" : "boolean",
          "default" : false
        },
        "address1" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "cityVillage" : {
          "type" : "string"
        },
        "stateProvince" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "countyDistrict" : {
          "type" : "string"
        },
        "address3" : {
          "type" : "string"
        },
        "address4" : {
          "type" : "string"
        },
        "address5" : {
          "type" : "string"
        },
        "address6" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date"
        },
        "latitude" : {
          "type" : "string"
        },
        "longitude" : {
          "type" : "string"
        }
      }
    },
    "PersonAddressCreateFull" : {
      "properties" : {
        "preferred" : {
          "type" : "boolean",
          "default" : false
        },
        "address1" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "cityVillage" : {
          "type" : "string"
        },
        "stateProvince" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "countyDistrict" : {
          "type" : "string"
        },
        "address3" : {
          "type" : "string"
        },
        "address4" : {
          "type" : "string"
        },
        "address5" : {
          "type" : "string"
        },
        "address6" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date"
        },
        "latitude" : {
          "type" : "string"
        },
        "longitude" : {
          "type" : "string"
        }
      }
    },
    "PersonAddressUpdate" : {
      "properties" : {
        "preferred" : {
          "type" : "boolean",
          "default" : false
        },
        "address1" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "cityVillage" : {
          "type" : "string"
        },
        "stateProvince" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "countyDistrict" : {
          "type" : "string"
        },
        "address3" : {
          "type" : "string"
        },
        "address4" : {
          "type" : "string"
        },
        "address5" : {
          "type" : "string"
        },
        "address6" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date"
        },
        "latitude" : {
          "type" : "string"
        },
        "longitude" : {
          "type" : "string"
        }
      }
    },
    "LocationAttributeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "LocationAttributeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "LocationAttributeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "LocationAttributeCreate" : {
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "LocationAttributeCreateFull" : {
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "LocationAttributeUpdate" : {
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "OrderFulfillerdetailsCreate" : {
      "properties" : {
        "fulfillerComment" : {
          "type" : "string"
        },
        "fulfillerStatus" : {
          "type" : "string",
          "enum" : [ "RECEIVED", "IN_PROGRESS", "EXCEPTION", "ON_HOLD", "DECLINED", "COMPLETED" ]
        },
        "accessionNumber" : {
          "type" : "string"
        }
      }
    },
    "OrderFulfillerdetailsCreateFull" : {
      "properties" : {
        "fulfillerComment" : {
          "type" : "string"
        },
        "fulfillerStatus" : {
          "type" : "string",
          "enum" : [ "RECEIVED", "IN_PROGRESS", "EXCEPTION", "ON_HOLD", "DECLINED", "COMPLETED" ]
        },
        "accessionNumber" : {
          "type" : "string"
        }
      }
    },
    "OrdersetOrdersetmemberGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "orderTemplate" : {
          "type" : "string"
        },
        "orderTemplateType" : {
          "type" : "string"
        },
        "orderType" : {
          "$ref" : "#/definitions/OrdertypeGetRef"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGetRef"
        }
      }
    },
    "OrdersetOrdersetmemberGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "OrdersetOrdersetmemberGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "boolean"
        },
        "orderTemplate" : {
          "type" : "string"
        },
        "orderTemplateType" : {
          "type" : "string"
        },
        "orderType" : {
          "$ref" : "#/definitions/OrdertypeGet"
        },
        "concept" : {
          "$ref" : "#/definitions/ConceptGet"
        }
      }
    },
    "OrdersetOrdersetmemberCreate" : {
      "properties" : {
        "orderType" : {
          "type" : "object",
          "properties" : {
            "uuid" : {
              "type" : "string"
            }
          }
        },
        "orderTemplate" : {
          "type" : "string"
        },
        "concept" : {
          "type" : "string",
          "example" : "uuid"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "OrdersetOrdersetmemberCreateFull" : {
      "properties" : {
        "orderType" : {
          "type" : "object",
          "properties" : {
            "uuid" : {
              "type" : "string"
            }
          }
        },
        "orderTemplate" : {
          "type" : "string"
        },
        "concept" : {
          "type" : "string",
          "example" : "uuid"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "OrdersetOrdersetmemberUpdate" : {
      "properties" : {
        "orderType" : {
          "type" : "object",
          "properties" : {
            "uuid" : {
              "type" : "string"
            }
          }
        },
        "orderTemplate" : {
          "type" : "string"
        },
        "concept" : {
          "type" : "string",
          "example" : "uuid"
        },
        "retired" : {
          "type" : "boolean"
        }
      }
    },
    "ConceptAttributeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "ConceptAttributeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "ConceptAttributeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "ConceptAttributeCreate" : {
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "ConceptAttributeCreateFull" : {
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "ConceptAttributeUpdate" : {
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "CohortMembershipGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date"
        },
        "patientUuid" : {
          "type" : "string"
        }
      }
    },
    "CohortMembershipGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "CohortMembershipGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date"
        },
        "patientUuid" : {
          "type" : "string"
        }
      }
    },
    "CohortMembershipCreate" : {
      "properties" : {
        "patientUuid" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "CohortMembershipCreateFull" : {
      "properties" : {
        "patientUuid" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "CohortMembershipUpdate" : {
      "properties" : {
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "FormFormfieldGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "fieldNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fieldPart" : {
          "type" : "string"
        },
        "pageNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "required" : {
          "type" : "boolean",
          "default" : false
        },
        "sortWeight" : {
          "type" : "number",
          "format" : "float"
        },
        "retired" : {
          "type" : "boolean"
        },
        "parent" : {
          "$ref" : "#/definitions/FormFormfieldGetRef"
        },
        "form" : {
          "$ref" : "#/definitions/FormGetRef"
        },
        "field" : {
          "$ref" : "#/definitions/FieldGetRef"
        }
      }
    },
    "FormFormfieldGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "FormFormfieldGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "fieldNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fieldPart" : {
          "type" : "string"
        },
        "pageNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "required" : {
          "type" : "boolean",
          "default" : false
        },
        "sortWeight" : {
          "type" : "number",
          "format" : "float"
        },
        "retired" : {
          "type" : "boolean"
        },
        "parent" : {
          "$ref" : "#/definitions/FormFormfieldGet"
        },
        "form" : {
          "$ref" : "#/definitions/FormGet"
        },
        "field" : {
          "$ref" : "#/definitions/FieldGet"
        }
      }
    },
    "FormFormfieldCreate" : {
      "required" : [ "field", "form", "required" ],
      "properties" : {
        "form" : {
          "type" : "string",
          "example" : "uuid"
        },
        "field" : {
          "type" : "string",
          "example" : "uuid"
        },
        "required" : {
          "type" : "boolean",
          "default" : false
        },
        "parent" : {
          "type" : "string",
          "example" : "uuid"
        },
        "fieldNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fieldPart" : {
          "type" : "string"
        },
        "pageNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sortWeight" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "FormFormfieldCreateFull" : {
      "required" : [ "field", "form", "required" ],
      "properties" : {
        "form" : {
          "$ref" : "#/definitions/FormCreate"
        },
        "field" : {
          "$ref" : "#/definitions/FieldCreate"
        },
        "required" : {
          "type" : "boolean",
          "default" : false
        },
        "parent" : {
          "$ref" : "#/definitions/FormFormfieldCreate"
        },
        "fieldNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fieldPart" : {
          "type" : "string"
        },
        "pageNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxOccurs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sortWeight" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "FormFormfieldUpdate" : { },
    "VisitAttributeGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "VisitAttributeGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        }
      }
    },
    "VisitAttributeGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "boolean"
        }
      }
    },
    "VisitAttributeCreate" : {
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "VisitAttributeCreateFull" : {
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "VisitAttributeUpdate" : {
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "example" : "uuid"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "FormResourceGet" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self|full"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "valueReference" : {
          "type" : "string"
        }
      }
    },
    "FormResourceGetRef" : {
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rel" : {
                "type" : "string",
                "example" : "self"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      }
    },
    "FormResourceGetFull" : {
      "properties" : {
        "auditInfo" : {
          "type" : "string"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : "self",
            "properties" : {
              "rel" : {
                "type" : "string"
              },
              "uri" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        },
        "uuid" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "valueReference" : {
          "type" : "string"
        },
        "dataType" : {
          "type" : "string"
        },
        "handler" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        }
      }
    },
    "FormResourceCreate" : {
      "properties" : {
        "form" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "dataType" : {
          "type" : "string"
        },
        "handler" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "valueReference" : {
          "type" : "string"
        }
      }
    },
    "FormResourceCreateFull" : {
      "properties" : {
        "form" : {
          "$ref" : "#/definitions/FormCreate"
        },
        "name" : {
          "type" : "string"
        },
        "dataType" : {
          "type" : "string"
        },
        "handler" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "valueReference" : {
          "type" : "string"
        }
      }
    },
    "FormResourceUpdate" : {
      "properties" : {
        "form" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "dataType" : {
          "type" : "string"
        },
        "handler" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "valueReference" : {
          "type" : "string"
        }
      }
    },
    "FetchAll" : {
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "display" : {
                "type" : "string"
              },
              "links" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "rel" : {
                      "type" : "string",
                      "example" : "self"
                    },
                    "uri" : {
                      "type" : "string",
                      "format" : "uri"
                    }
                  }
                }
              },
              "uuid" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Find more info on REST Module Wiki",
    "url" : "https://wiki.openmrs.org/x/xoAaAQ"
  }
}